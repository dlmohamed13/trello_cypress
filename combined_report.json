{
  "stats": {
    "suites": 5,
    "tests": 18,
    "passes": 17,
    "pending": 0,
    "failures": 1,
    "start": "2021-05-03T15:53:20.978Z",
    "end": "2021-05-03T15:53:54.092Z",
    "duration": 18717,
    "testsRegistered": 18,
    "passPercent": 94.44444444444444,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "667789bb-f69d-44a3-abd8-0e3a13e2134f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a54fd8de-4457-4a9c-ac52-d6322ac8243d",
          "title": "Should Exercise API Functionality for Boards",
          "fullFile": "/Users/deonte.mohamed/Development/personal_projects/interviewPrep/trelloapp/api_testing/api_test/boards_api_test.js",
          "file": "/api_testing/api_test/boards_api_test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook: Should delete all boards in \"Should Exercise API Functionality for Boards\"",
              "fullTitle": "Should Exercise API Functionality for Boards \"before all\" hook: Should delete all boards in \"Should Exercise API Functionality for Boards\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "resetAPI.executeReset(resetAPI.resetAll.endpoint, resetAPI.resetAll.options);",
              "err": {},
              "uuid": "e0e3d434-7dc2-46bc-a74a-73ec907ab94d",
              "parentUUID": "a54fd8de-4457-4a9c-ac52-d6322ac8243d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should POST new Board",
              "fullTitle": "Should Exercise API Functionality for Boards Should POST new Board",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let data = {name: 'New Board'};\nchai.request(host)\n  .post('/boards')\n  .send(data)\n  .end((err, res) => {\n    res.should.have.status(201);\n    res.body.should.have.property('name').eq('New Board');\n    res.body.should.have.property('id');\n    res.body.should.have.property('starred').eq(false);\n    res.body.should.have.property('created');\n    console.log(res.body);\n    done();\n  });",
              "err": {},
              "uuid": "0978b09b-5ce1-49f8-8137-8f7d5e0be5f2",
              "parentUUID": "a54fd8de-4457-4a9c-ac52-d6322ac8243d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should GET All Boards",
              "fullTitle": "Should Exercise API Functionality for Boards Should GET All Boards",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai.request(host)\n  .get('/boards')\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eq(1);\n    res.body[0].should.have.property('name').eq('New Board');\n    console.log(res.body);\n    done();\n  });",
              "err": {},
              "uuid": "af96fd71-e71f-4a7a-ae55-2d1cf164193b",
              "parentUUID": "a54fd8de-4457-4a9c-ac52-d6322ac8243d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should PATCH/UPDATE Board",
              "fullTitle": "Should Exercise API Functionality for Boards Should PATCH/UPDATE Board",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var updateId = '';\nlet data = {name: 'Edited Board', starred: true};\nchai.request(host)\n  .get('/boards')\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eq(1);\n    res.body[0].should.have.property('name').eq('New Board');\n    updateId = res.body[0]['id'];\n    chai.request(host)\n      .patch('/boards/' + updateId)\n      .send(data)\n      .end((err, res) => {\n        console.log(res.body);\n        res.body.should.have.property('name').eq('Edited Board');\n        res.body.should.have.property('starred').eq(true);\n        done();\n      });\n  });",
              "err": {},
              "uuid": "80cc41ad-5ca7-4bf5-9c9c-4699dcb3c5e4",
              "parentUUID": "a54fd8de-4457-4a9c-ac52-d6322ac8243d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should Delete Board",
              "fullTitle": "Should Exercise API Functionality for Boards Should Delete Board",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var deleteID = '';\nchai.request(host)\n  .get('/boards')\n  .end((err, res) => {\n    res.should.have.status(200);\n    res.body.should.be.a('array');\n    res.body.length.should.be.eq(1);\n    deleteID = res.body[0]['id'];\n    chai.request(host)\n      .delete('/boards/' + deleteID)\n      .end((err, res) => {\n        res.body.should.be.empty;\n        chai.request(host)\n          .get('/boards')\n          .end((err, res) => {\n            res.body.should.be.empty;\n          });\n        done();\n      });\n  });",
              "err": {},
              "uuid": "ee4db9ff-feae-45d1-bfc0-372f850ca856",
              "parentUUID": "a54fd8de-4457-4a9c-ac52-d6322ac8243d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0978b09b-5ce1-49f8-8137-8f7d5e0be5f2",
            "af96fd71-e71f-4a7a-ae55-2d1cf164193b",
            "80cc41ad-5ca7-4bf5-9c9c-4699dcb3c5e4",
            "ee4db9ff-feae-45d1-bfc0-372f850ca856"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 43,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 3000
    },
    {
      "uuid": "ccb11840-a5e3-4a58-bf72-e7d5cbf94d9f",
      "title": "",
      "fullFile": "cypress/integration/ui_tests/account_creation.js",
      "file": "cypress/integration/ui_tests/account_creation.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7887b1fd-0d07-41f7-b01b-cfae88d195c8",
          "title": "User Should be to sucessfully perform list operations",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to create a new account",
              "fullTitle": "User Should be to sucessfully perform list operations Should be able to create a new account",
              "timedOut": null,
              "duration": 1704,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_24dw6qe0nf().f[3]++;\nvar email = (cov_24dw6qe0nf().s[7]++, faker.internet.email());\ncov_24dw6qe0nf().s[8]++;\ncy.get('[data-cy=login-menu]').click();\ncov_24dw6qe0nf().s[9]++;\ncy.xpath('//a[text()=\"Sign up here\"]').click();\ncov_24dw6qe0nf().s[10]++;\ncy.get('[data-cy=signup-email]').type(email);\ncov_24dw6qe0nf().s[11]++;\ncy.get('[data-cy=signup-password]').type('password');\ncov_24dw6qe0nf().s[12]++;\ncy.get('[data-cy=signup]').click();\ncov_24dw6qe0nf().s[13]++;\ncy.get('[data-cy=logged-user]').should('contain.text', email);",
              "err": {},
              "uuid": "966a940f-6306-4430-8123-c023d9ac818a",
              "parentUUID": "7887b1fd-0d07-41f7-b01b-cfae88d195c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to log in with new account ",
              "fullTitle": "User Should be to sucessfully perform list operations Should be able to log in with new account ",
              "timedOut": null,
              "duration": 969,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_24dw6qe0nf().f[4]++;\nvar email = (cov_24dw6qe0nf().s[15]++, faker.internet.email());\nvar password = (cov_24dw6qe0nf().s[16]++, 'password');\ncov_24dw6qe0nf().s[17]++;\ncy.request({\n  method: 'POST',\n  url: '/signup',\n  headers: {\n    'Accept': 'application/json, text/plain, */*'\n  },\n  body: {\n    'email': email,\n    'password': password\n  }\n});\ncov_24dw6qe0nf().s[18]++;\ncy.get('[data-cy=login-menu]').click();\ncov_24dw6qe0nf().s[19]++;\ncy.get('[data-cy=login-email]').type(email);\ncov_24dw6qe0nf().s[20]++;\ncy.get('[data-cy=login-password]').type(password);\ncov_24dw6qe0nf().s[21]++;\ncy.get('[data-cy=login]').click();",
              "err": {},
              "uuid": "cd4953b7-6f35-4e4a-b3a8-a49362e6d595",
              "parentUUID": "7887b1fd-0d07-41f7-b01b-cfae88d195c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should recieve new account email",
              "fullTitle": "User Should be to sucessfully perform list operations Should recieve new account email",
              "timedOut": null,
              "duration": 1713,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_24dw6qe0nf().f[5]++;\nvar email = (cov_24dw6qe0nf().s[23]++, faker.name.firstName() + faker.name.lastName() + '@mailhog.com');\ncov_24dw6qe0nf().s[24]++;\nconsole.log(email);\ncov_24dw6qe0nf().s[25]++;\ncy.get('[data-cy=login-menu]').click({\n  force: true\n});\ncov_24dw6qe0nf().s[26]++;\ncy.xpath('//a[text()=\"Sign up here\"]').click();\ncov_24dw6qe0nf().s[27]++;\ncy.get('[data-cy=signup-email]').type(email);\ncov_24dw6qe0nf().s[28]++;\ncy.get('[data-cy=signup-password]').type('password');\ncov_24dw6qe0nf().s[29]++;\ncy.get('[data-cy=welcome-email-checkbox]').click();\ncov_24dw6qe0nf().s[30]++;\ncy.get('[data-cy=signup]').click();\ncov_24dw6qe0nf().s[31]++;\ncy.get('[data-cy=logged-user]').should('contain.text', email); //TODO Make this less racey \ncov_24dw6qe0nf().s[32]++;\ncy.wait(500);\ncov_24dw6qe0nf().s[33]++;\ncy.request({\n  method: 'GET',\n  url: 'localhost:8025/api/v2/messages',\n  headers: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n}).then(function (res) {\n  cov_24dw6qe0nf().f[6]++;\n  var message = (cov_24dw6qe0nf().s[34]++, 'Your account was successfully created!');\n  cov_24dw6qe0nf().s[35]++;\n  expect(email).to.contain(res.body.items[0].To[0].Mailbox);\n  cov_24dw6qe0nf().s[36]++;\n  expect(email).to.contain(res.body.items[0].To[0].Domain);\n  cov_24dw6qe0nf().s[37]++;\n  expect(res.body.items[0].Content.Body).to.contain(message);\n});",
              "err": {},
              "uuid": "b0330caa-51f2-46ab-9b68-92daaf37420e",
              "parentUUID": "7887b1fd-0d07-41f7-b01b-cfae88d195c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "966a940f-6306-4430-8123-c023d9ac818a",
            "cd4953b7-6f35-4e4a-b3a8-a49362e6d595",
            "b0330caa-51f2-46ab-9b68-92daaf37420e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4386,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0907f4de-9c8e-4dff-b570-150afc4e782e",
      "title": "",
      "fullFile": "cypress/integration/ui_tests/board_operations.js",
      "file": "cypress/integration/ui_tests/board_operations.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9a550a5b-8b13-4948-b983-e3a23ddc6559",
          "title": "User Should be to sucessfully perform board operations",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to create a board",
              "fullTitle": "User Should be to sucessfully perform board operations Should be able to create a board",
              "timedOut": null,
              "duration": 724,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2rf703rxvf().f[3]++;\ncov_2rf703rxvf().s[13]++;\ncy.get(locators.createBoard).click();\ncov_2rf703rxvf().s[14]++;\ncy.get(locators.newBoardInput).type('test board');\ncov_2rf703rxvf().s[15]++;\ncy.get(locators.newBoardSave).click();\ncov_2rf703rxvf().s[16]++;\ncy.get(locators.boardTitle).should('have.value', 'test board');",
              "err": {},
              "uuid": "20f4d2eb-7774-4c47-aa9e-95be3bb304d5",
              "parentUUID": "9a550a5b-8b13-4948-b983-e3a23ddc6559",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to edit board names",
              "fullTitle": "User Should be to sucessfully perform board operations Should be able to edit board names",
              "timedOut": null,
              "duration": 951,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2rf703rxvf().f[4]++;\ncov_2rf703rxvf().s[18]++;\ncy.get(locators.createBoard).click();\ncov_2rf703rxvf().s[19]++;\ncy.get(locators.newBoardInput).type('edit board');\ncov_2rf703rxvf().s[20]++;\ncy.get(locators.newBoardSave).click();\ncov_2rf703rxvf().s[21]++;\ncy.get(locators.boardTitle).should('have.value', 'edit board');\ncov_2rf703rxvf().s[22]++;\ncy.get(locators.boardTitle).click();\ncov_2rf703rxvf().s[23]++;\ncy.get(locators.boardTitle).clear();\ncov_2rf703rxvf().s[24]++;\ncy.get(locators.boardTitle).type('New Board Name');\ncov_2rf703rxvf().s[25]++;\ncy.get(locators.boardTitle).type('{enter}');\ncov_2rf703rxvf().s[26]++;\ncy.get(locators.boardTitle).should('have.value', 'New Board Name');",
              "err": {},
              "uuid": "e4f1d965-21b8-4d81-aca7-8261eaa7a823",
              "parentUUID": "9a550a5b-8b13-4948-b983-e3a23ddc6559",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to delete a board ",
              "fullTitle": "User Should be to sucessfully perform board operations Should be able to delete a board ",
              "timedOut": null,
              "duration": 712,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2rf703rxvf().f[5]++;\ncov_2rf703rxvf().s[28]++;\ncy.get(locators.createBoard).click();\ncov_2rf703rxvf().s[29]++;\ncy.get(locators.newBoardInput).type('Board to Delete');\ncov_2rf703rxvf().s[30]++;\ncy.get(locators.newBoardSave).click();\ncov_2rf703rxvf().s[31]++;\ncy.get(locators.boardTitle).should('have.value', 'Board to Delete');\ncov_2rf703rxvf().s[32]++;\ncy.get(locators.boardOptions).click();\ncov_2rf703rxvf().s[33]++;\ncy.get('[data-cy=board-options] > #myDropdown > .delete').click();\ncov_2rf703rxvf().s[34]++;\ncy.get(locators.boardItem).should('not.have.value', 'Board to Delete');",
              "err": {},
              "uuid": "281bdfec-b5b2-4f45-a775-a6bcf2049b27",
              "parentUUID": "9a550a5b-8b13-4948-b983-e3a23ddc6559",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to favorite a board ",
              "fullTitle": "User Should be to sucessfully perform board operations Should be able to favorite a board ",
              "timedOut": null,
              "duration": 6122,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  \"/Users/deonte.mohamed/Development/personal_projects/interviewPrep/trelloapp/cypress/results/assets/screenshots/ui_tests/board_operations.js/User Should be to sucessfully perform board operations -- Should be able to favorite a board  (failed).png\",\n  \"/Users/deonte.mohamed/Development/personal_projects/interviewPrep/trelloapp/cypress/results/assets/videos/ui_tests/board_operations.js.mp4\"\n]",
              "code": "cov_2rf703rxvf().f[6]++;\ncov_2rf703rxvf().s[36]++;\ncy.get(locators.createBoard).click();\ncov_2rf703rxvf().s[37]++;\ncy.get(locators.newBoardInput).type('Favorite Board');\ncov_2rf703rxvf().s[38]++;\ncy.get(locators.newBoardSave).click();\ncov_2rf703rxvf().s[39]++;\ncy.get(locators.boardTitle).should('have.value', 'Favorite Board');\ncov_2rf703rxvf().s[40]++;\ncy.visit('/');\ncov_2rf703rxvf().s[41]++;\ncy.contains('Favorite Board').parent().trigger('mouseover').children('[data-cy=star]').click();\ncov_2rf703rxvf().s[42]++;\ncy.contains('My Starred').next('.board').children(locators.boardItem).children('h1.board_title').should('have.value', 'Favorite Board');",
              "err": {
                "message": "AssertionError: Timed out retrying after 5000ms: expected '<h1.board_title>' to have value 'Favorite Board', but the value was ''",
                "estack": "AssertionError: Timed out retrying after 5000ms: expected '<h1.board_title>' to have value 'Favorite Board', but the value was ''\n    at Context.eval (http://localhost:3000/__cypress/tests?p=cypress/integration/ui_tests/board_operations.js:1002:102)",
                "diff": "+ 'Favorite Board'\n"
              },
              "uuid": "bcc4ec0c-67cb-4131-9010-d94d9439c2d2",
              "parentUUID": "9a550a5b-8b13-4948-b983-e3a23ddc6559",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to add a list to a board ",
              "fullTitle": "User Should be to sucessfully perform board operations Should be able to add a list to a board ",
              "timedOut": null,
              "duration": 769,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2rf703rxvf().f[7]++;\ncov_2rf703rxvf().s[44]++;\ncy.get(locators.createBoard).click();\ncov_2rf703rxvf().s[45]++;\ncy.get(locators.newBoardInput).type('test board');\ncov_2rf703rxvf().s[46]++;\ncy.get(locators.newBoardSave).click();\ncov_2rf703rxvf().s[47]++;\ncy.get(locators.boardTitle).should('have.value', 'test board');\ncov_2rf703rxvf().s[48]++;\ncy.get('[data-cy=add-list]').click();\ncov_2rf703rxvf().s[49]++;\ncy.get('[data-cy=add-list-input]').type('Test List {enter}');\ncov_2rf703rxvf().s[50]++;\ncy.get('[data-cy=list]').should('be.visible');",
              "err": {},
              "uuid": "3675aeba-2d92-434a-a928-575b5e3a5d34",
              "parentUUID": "9a550a5b-8b13-4948-b983-e3a23ddc6559",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "20f4d2eb-7774-4c47-aa9e-95be3bb304d5",
            "e4f1d965-21b8-4d81-aca7-8261eaa7a823",
            "281bdfec-b5b2-4f45-a775-a6bcf2049b27",
            "3675aeba-2d92-434a-a928-575b5e3a5d34"
          ],
          "failures": [
            "bcc4ec0c-67cb-4131-9010-d94d9439c2d2"
          ],
          "pending": [],
          "skipped": [],
          "duration": 9278,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c884f474-98b9-4fec-aa18-f1409420d072",
      "title": "",
      "fullFile": "cypress/integration/ui_tests/list_operations.js",
      "file": "cypress/integration/ui_tests/list_operations.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "aa1e01be-7680-4805-ac85-e1012b7fd06a",
          "title": "User Should be to sucessfully perform list operations",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to create a list",
              "fullTitle": "User Should be to sucessfully perform list operations Should be able to create a list",
              "timedOut": null,
              "duration": 857,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_n4njev3qp().f[4]++;\ncov_n4njev3qp().s[8]++;\ncy.get('[data-cy=add-list]').click();\ncov_n4njev3qp().s[9]++;\ncy.get('[data-cy=add-list-input]').type(faker.name.jobDescriptor() + ' Test List {enter}');\ncov_n4njev3qp().s[10]++;\ncy.get('[data-cy=list]').should('be.visible');",
              "err": {},
              "uuid": "e48a5b32-841c-4c25-8ec3-3dca475a209d",
              "parentUUID": "aa1e01be-7680-4805-ac85-e1012b7fd06a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to delete lists ",
              "fullTitle": "User Should be to sucessfully perform list operations Should be able to delete lists ",
              "timedOut": null,
              "duration": 681,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_n4njev3qp().f[5]++;\ncov_n4njev3qp().s[12]++;\ncy.get('[data-cy=add-list]').click();\ncov_n4njev3qp().s[13]++;\ncy.get('[data-cy=add-list-input]').type(faker.name.jobDescriptor() + ' Test List {enter}');\ncov_n4njev3qp().s[14]++;\ncy.get('[data-cy=list]').should('be.visible');\ncov_n4njev3qp().s[15]++;\ncy.get('[data-cy=list] > .dropdown').click({\n  multiple: true,\n  force: true\n});\ncov_n4njev3qp().s[16]++;\ncy.get('[data-cy=list] > .dropdown > #myDropdown > .delete').click({\n  multiple: true,\n  force: true\n}); //Will switch to using list ids once we get into APIS \ncov_n4njev3qp().s[17]++;\ncy.get('[data-cy=list-name]').should('not.exist');",
              "err": {},
              "uuid": "2f47709f-eb59-48dc-963f-9e6b1d858d4e",
              "parentUUID": "aa1e01be-7680-4805-ac85-e1012b7fd06a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be to edit list name",
              "fullTitle": "User Should be to sucessfully perform list operations Should be to edit list name",
              "timedOut": null,
              "duration": 1014,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_n4njev3qp().f[6]++;\ncov_n4njev3qp().s[19]++;\ncy.get('[data-cy=add-list]').click();\ncov_n4njev3qp().s[20]++;\ncy.get('[data-cy=add-list-input]').type(faker.name.jobDescriptor() + ' Test List {enter}');\ncov_n4njev3qp().s[21]++;\ncy.get('[data-cy=list]').should('be.visible');\ncov_n4njev3qp().s[22]++;\ncy.get('[data-cy=list-name]').clear();\ncov_n4njev3qp().s[23]++;\ncy.get('[data-cy=list-name]').type('New List Name {enter}');\ncov_n4njev3qp().s[24]++;\ncy.get('[data-cy=list-name]').should('contain.value', 'New List Name');",
              "err": {},
              "uuid": "4ca6b882-0941-489a-aaf9-819b392dd98e",
              "parentUUID": "aa1e01be-7680-4805-ac85-e1012b7fd06a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to add tasks to a list",
              "fullTitle": "User Should be to sucessfully perform list operations Should be able to add tasks to a list",
              "timedOut": null,
              "duration": 1045,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_n4njev3qp().f[7]++;\ncov_n4njev3qp().s[26]++;\ncy.get('[data-cy=add-list]').click();\ncov_n4njev3qp().s[27]++;\ncy.get('[data-cy=add-list-input]').type(faker.name.jobDescriptor() + ' Test List {enter}');\ncov_n4njev3qp().s[28]++;\ncy.get('[data-cy=list]').should('be.visible');\ncov_n4njev3qp().s[29]++;\ncy.get('[data-cy=new-task]').click();\ncov_n4njev3qp().s[30]++;\ncy.get('[data-cy=task-input]').type(faker.name.jobDescriptor() + ' Test Task {enter}');\ncov_n4njev3qp().s[31]++;\ncy.get('[data-cy=task]').should('be.visible'); //cy.log(cy.get('.Task_title').);",
              "err": {},
              "uuid": "7458241a-0092-47d3-af9b-11fc5d8005b2",
              "parentUUID": "aa1e01be-7680-4805-ac85-e1012b7fd06a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e48a5b32-841c-4c25-8ec3-3dca475a209d",
            "2f47709f-eb59-48dc-963f-9e6b1d858d4e",
            "4ca6b882-0941-489a-aaf9-819b392dd98e",
            "7458241a-0092-47d3-af9b-11fc5d8005b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3597,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4d03b798-5c36-493d-a4f8-9e9d2031b4fa",
      "title": "",
      "fullFile": "cypress/integration/ui_tests/task_operations.js",
      "file": "cypress/integration/ui_tests/task_operations.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a1087b6d-7256-422e-9e3f-1da0b372dbbc",
          "title": "User Should be to sucessfully perform list operations",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able to create a task",
              "fullTitle": "User Should be to sucessfully perform list operations Should be able to create a task",
              "timedOut": null,
              "duration": 745,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_11afjark6n().f[4]++;\ncov_11afjark6n().s[8]++;\ncy.get('[data-cy=new-task]').click();\ncov_11afjark6n().s[9]++;\ncy.get('[data-cy=task-input]').type('Some Task {enter}');",
              "err": {},
              "uuid": "21a635b9-3464-486a-a8d3-7ae8c3923a53",
              "parentUUID": "a1087b6d-7256-422e-9e3f-1da0b372dbbc",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should be able to mark task as completed and not completed",
              "fullTitle": "User Should be to sucessfully perform list operations Should be able to mark task as completed and not completed",
              "timedOut": null,
              "duration": 668,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_11afjark6n().f[5]++;\ncov_11afjark6n().s[11]++;\ncy.get('[data-cy=new-task]').click();\ncov_11afjark6n().s[12]++;\ncy.get('[data-cy=task-input]').type('Some Task {enter}');\ncov_11afjark6n().s[13]++;\ncy.get('[data-cy=task-done]').click();\ncov_11afjark6n().s[14]++;\ncy.get('.Task_title.completed').should('be.visible');\ncov_11afjark6n().s[15]++;\ncy.get('[data-cy=task-done]').click();\ncov_11afjark6n().s[16]++;\ncy.get('.Task_title.completed').should('not.exist');",
              "err": {},
              "uuid": "59fdb6fb-dd72-44ee-8de3-96e0e05d9fce",
              "parentUUID": "a1087b6d-7256-422e-9e3f-1da0b372dbbc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21a635b9-3464-486a-a8d3-7ae8c3923a53",
            "59fdb6fb-dd72-44ee-8de3-96e0e05d9fce"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1413,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.3.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome_api",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportFilename": "mochawesome_api"
      },
      "version": "5.2.0"
    }
  }
}