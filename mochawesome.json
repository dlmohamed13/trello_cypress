{
  "stats": {
    "suites": 19,
    "tests": 114,
    "passes": 113,
    "pending": 0,
    "failures": 1,
    "start": "2021-04-29T10:48:39.362Z",
    "end": "2021-04-29T10:50:32.140Z",
    "duration": 49726,
    "testsRegistered": 114,
    "passPercent": 99.12280701754386,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d6ced88e-df81-46bd-ac8f-1c7703e8cbff",
      "title": "",
      "fullFile": "cypress/integration/examples/actions.spec.js",
      "file": "cypress/integration/examples/actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9e844b10-a3c9-43dd-beb7-64e64df27348",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 4123,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[2]++;\ncov_1v16cnlh2v().s[4]++;\n// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncov_1v16cnlh2v().s[5]++;\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "ddbc4fa1-cffc-494d-b341-f0eab1a73e10",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 217,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[3]++;\ncov_1v16cnlh2v().s[7]++;\n// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "238b0e9b-bb80-4612-b634-bf104d506125",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 449,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[4]++;\ncov_1v16cnlh2v().s[9]++;\n// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "d5d9c351-4527-4562-869f-12eb164b547f",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 554,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[5]++;\ncov_1v16cnlh2v().s[11]++;\n// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "45c7f6c5-3472-440b-8500-7a73245d0510",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 451,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[6]++;\ncov_1v16cnlh2v().s[13]++;\n// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncov_1v16cnlh2v().s[14]++;\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "0736ba90-eee7-4c57-9b5e-33bd5ae9a997",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2623,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[7]++;\ncov_1v16cnlh2v().s[16]++;\n// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncov_1v16cnlh2v().s[17]++;\ncy.get('#action-canvas').click();\ncov_1v16cnlh2v().s[18]++;\ncy.get('#action-canvas').click('topLeft');\ncov_1v16cnlh2v().s[19]++;\ncy.get('#action-canvas').click('top');\ncov_1v16cnlh2v().s[20]++;\ncy.get('#action-canvas').click('topRight');\ncov_1v16cnlh2v().s[21]++;\ncy.get('#action-canvas').click('left');\ncov_1v16cnlh2v().s[22]++;\ncy.get('#action-canvas').click('right');\ncov_1v16cnlh2v().s[23]++;\ncy.get('#action-canvas').click('bottomLeft');\ncov_1v16cnlh2v().s[24]++;\ncy.get('#action-canvas').click('bottom');\ncov_1v16cnlh2v().s[25]++;\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncov_1v16cnlh2v().s[26]++;\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncov_1v16cnlh2v().s[27]++;\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncov_1v16cnlh2v().s[28]++;\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "792715b6-a9fe-4448-9224-0ea16b9cfc1c",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[8]++;\ncov_1v16cnlh2v().s[30]++;\n// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncov_1v16cnlh2v().s[31]++;\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "8b4fd79a-2dc8-4577-a9b7-df5c89c0d54c",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 228,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[9]++;\ncov_1v16cnlh2v().s[33]++;\n// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncov_1v16cnlh2v().s[34]++;\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "b3e648c6-9d9a-40c4-bf85-5a867362f4a1",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1030,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[10]++;\ncov_1v16cnlh2v().s[36]++;\n// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncov_1v16cnlh2v().s[37]++;\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncov_1v16cnlh2v().s[38]++;\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncov_1v16cnlh2v().s[39]++;\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncov_1v16cnlh2v().s[40]++;\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncov_1v16cnlh2v().s[41]++;\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "8cd2837b-3852-4b25-88de-375ef90b3b7b",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 1100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[11]++;\ncov_1v16cnlh2v().s[43]++;\n// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncov_1v16cnlh2v().s[44]++;\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncov_1v16cnlh2v().s[45]++;\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncov_1v16cnlh2v().s[46]++;\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "9dc59c94-7951-4de0-bcfc-465cc0c7e2a3",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1031,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[12]++;\ncov_1v16cnlh2v().s[48]++;\n// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncov_1v16cnlh2v().s[49]++;\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncov_1v16cnlh2v().s[50]++;\ncy.get('.action-select').should('have.value', 'fr-apples');\ncov_1v16cnlh2v().s[51]++;\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncov_1v16cnlh2v().s[52]++;\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncov_1v16cnlh2v().s[53]++;\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncov_1v16cnlh2v().s[54]++;\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "6656de6f-34fc-43c0-ab66-47931a2954b8",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[13]++;\ncov_1v16cnlh2v().s[56]++;\n// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncov_1v16cnlh2v().s[57]++;\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncov_1v16cnlh2v().s[58]++;\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncov_1v16cnlh2v().s[59]++;\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncov_1v16cnlh2v().s[60]++;\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncov_1v16cnlh2v().s[61]++;\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "d683ab91-4a87-4c6f-9bcd-5d648d149546",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[14]++;\ncov_1v16cnlh2v().s[63]++;\n// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "ec099a75-8a21-4bc5-94b8-ace6aaadce94",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1v16cnlh2v().f[15]++;\ncov_1v16cnlh2v().s[65]++;\n// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncov_1v16cnlh2v().s[66]++;\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncov_1v16cnlh2v().s[67]++;\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncov_1v16cnlh2v().s[68]++;\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncov_1v16cnlh2v().s[69]++;\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncov_1v16cnlh2v().s[70]++;\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "75d8a001-18e8-434d-8456-e7ecf2017302",
              "parentUUID": "9e844b10-a3c9-43dd-beb7-64e64df27348",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ddbc4fa1-cffc-494d-b341-f0eab1a73e10",
            "238b0e9b-bb80-4612-b634-bf104d506125",
            "d5d9c351-4527-4562-869f-12eb164b547f",
            "45c7f6c5-3472-440b-8500-7a73245d0510",
            "0736ba90-eee7-4c57-9b5e-33bd5ae9a997",
            "792715b6-a9fe-4448-9224-0ea16b9cfc1c",
            "8b4fd79a-2dc8-4577-a9b7-df5c89c0d54c",
            "b3e648c6-9d9a-40c4-bf85-5a867362f4a1",
            "8cd2837b-3852-4b25-88de-375ef90b3b7b",
            "9dc59c94-7951-4de0-bcfc-465cc0c7e2a3",
            "6656de6f-34fc-43c0-ab66-47931a2954b8",
            "d683ab91-4a87-4c6f-9bcd-5d648d149546",
            "ec099a75-8a21-4bc5-94b8-ace6aaadce94",
            "75d8a001-18e8-434d-8456-e7ecf2017302"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 14536,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "7137279b-9f61-441a-accb-8004090ed9d6",
      "title": "",
      "fullFile": "cypress/integration/examples/aliasing.spec.js",
      "file": "cypress/integration/examples/aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e10dee67-622c-4496-bc01-2ba5725fdc76",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 344,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_4kc1ij0w7().f[2]++;\ncov_4kc1ij0w7().s[4]++;\n// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n// @ in front of its name\ncov_4kc1ij0w7().s[5]++;\ncy.get('@firstBtn').click();\ncov_4kc1ij0w7().s[6]++;\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "f8f83848-79a0-4b73-a80b-01e251b4ff84",
              "parentUUID": "e10dee67-622c-4496-bc01-2ba5725fdc76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 338,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_4kc1ij0w7().f[3]++;\ncov_4kc1ij0w7().s[8]++;\n// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncov_4kc1ij0w7().s[9]++;\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncov_4kc1ij0w7().s[10]++;\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "2bd41a57-a945-4f1b-a350-920568620b4a",
              "parentUUID": "e10dee67-622c-4496-bc01-2ba5725fdc76",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f8f83848-79a0-4b73-a80b-01e251b4ff84",
            "2bd41a57-a945-4f1b-a350-920568620b4a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 682,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "97bd6170-a776-4364-bcf1-ea06c4c313c4",
      "title": "",
      "fullFile": "cypress/integration/examples/assertions.spec.js",
      "file": "cypress/integration/examples/assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2c773f6a-9434-4e59-b3e0-c3e5713aac52",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b5679ef1-1715-47ae-9079-b92fe1cc91d6",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 279,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1qr950qfz9().f[3]++;\ncov_1qr950qfz9().s[5]++;\n// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncov_1qr950qfz9().s[6]++;\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-element’s-text-contents",
                  "err": {},
                  "uuid": "44d1dee5-1f20-4387-9c3b-f18ee0171d22",
                  "parentUUID": "b5679ef1-1715-47ae-9079-b92fe1cc91d6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 116,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1qr950qfz9().f[4]++;\ncov_1qr950qfz9().s[8]++;\n// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "ca756dbb-4536-4838-a370-da4da4b2764b",
                  "parentUUID": "b5679ef1-1715-47ae-9079-b92fe1cc91d6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "44d1dee5-1f20-4387-9c3b-f18ee0171d22",
                "ca756dbb-4536-4838-a370-da4da4b2764b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 395,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "f3df14d8-1ee3-4c2f-9ae3-f5572aa27bdd",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1qr950qfz9().f[6]++;\ncov_1qr950qfz9().s[11]++;\n// We can use Chai's BDD style assertions\nexpect(true).to.be[\"true\"];\nvar o = (cov_1qr950qfz9().s[12]++, {\n  foo: 'bar'\n});\ncov_1qr950qfz9().s[13]++;\nexpect(o).to.equal(o);\ncov_1qr950qfz9().s[14]++;\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\ncov_1qr950qfz9().s[15]++;\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "db6e360c-e892-4622-a826-52a5f71c6511",
                  "parentUUID": "f3df14d8-1ee3-4c2f-9ae3-f5572aa27bdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 111,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1qr950qfz9().f[7]++;\ncov_1qr950qfz9().s[17]++;\n// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should(function ($p) {\n  cov_1qr950qfz9().f[8]++;\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  var texts = (cov_1qr950qfz9().s[18]++, $p.map(function (i, el) {\n    cov_1qr950qfz9().f[9]++;\n    cov_1qr950qfz9().s[19]++;\n    return Cypress.$(el).text();\n  })); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  var paragraphs = (cov_1qr950qfz9().s[20]++, texts.get()); // array should have length of 3\n  cov_1qr950qfz9().s[21]++;\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  cov_1qr950qfz9().s[22]++;\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "e47b57f3-b0a6-428b-aa81-fd7edb0f189f",
                  "parentUUID": "f3df14d8-1ee3-4c2f-9ae3-f5572aa27bdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 129,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1qr950qfz9().f[10]++;\ncov_1qr950qfz9().s[24]++;\ncy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should(function ($div) {\n  cov_1qr950qfz9().f[11]++;\n  cov_1qr950qfz9().s[25]++;\n  expect($div).to.have.length(1);\n  var className = (cov_1qr950qfz9().s[26]++, $div[0].className);\n  cov_1qr950qfz9().s[27]++;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then(function ($div) {\n  cov_1qr950qfz9().f[12]++;\n  cov_1qr950qfz9().s[28]++;\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "a8eeaafe-4b6c-4563-9a7e-5e5f207b96c1",
                  "parentUUID": "f3df14d8-1ee3-4c2f-9ae3-f5572aa27bdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 125,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1qr950qfz9().f[13]++;\ncov_1qr950qfz9().s[30]++;\ncy.get('.docs-header').find('div').should(function ($div) {\n  cov_1qr950qfz9().f[14]++;\n  cov_1qr950qfz9().s[31]++;\n  if ($div.length !== 1) {\n    cov_1qr950qfz9().b[0][0]++;\n    cov_1qr950qfz9().s[32]++;\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  } else {\n    cov_1qr950qfz9().b[0][1]++;\n  }\n  var className = (cov_1qr950qfz9().s[33]++, $div[0].className);\n  cov_1qr950qfz9().s[34]++;\n  if (!className.match(/heading-/)) {\n    cov_1qr950qfz9().b[1][0]++;\n    cov_1qr950qfz9().s[35]++;\n    throw new Error(\"Could not find class \\\"heading-\\\" in \".concat(className));\n  } else {\n    cov_1qr950qfz9().b[1][1]++;\n  }\n});",
                  "err": {},
                  "uuid": "8c8e6ec5-0060-4484-b228-ac211e2e2f28",
                  "parentUUID": "f3df14d8-1ee3-4c2f-9ae3-f5572aa27bdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 132,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1qr950qfz9().f[15]++;\n/**\n * Text from the first element.\n * @type {string}\n*/\nvar text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\ncov_1qr950qfz9().s[37]++;\nvar normalizeText = function normalizeText(s) {\n  cov_1qr950qfz9().f[16]++;\n  cov_1qr950qfz9().s[38]++;\n  return s.replace(/\\s/g, '').toLowerCase();\n};\ncov_1qr950qfz9().s[39]++;\ncy.get('.two-elements').find('.first').then(function ($first) {\n  cov_1qr950qfz9().f[17]++;\n  cov_1qr950qfz9().s[40]++;\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncov_1qr950qfz9().s[41]++;\ncy.get('.two-elements').find('.second').should(function ($div) {\n  cov_1qr950qfz9().f[18]++;\n  // we can massage text before comparing\n  var secondText = (cov_1qr950qfz9().s[42]++, normalizeText($div.text()));\n  cov_1qr950qfz9().s[43]++;\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "42beda90-940f-4705-8f3a-c183f33ca742",
                  "parentUUID": "f3df14d8-1ee3-4c2f-9ae3-f5572aa27bdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 118,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1qr950qfz9().f[19]++;\nvar person = (cov_1qr950qfz9().s[45]++, {\n  name: 'Joe',\n  age: 20\n});\ncov_1qr950qfz9().s[46]++;\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "db01a0b7-738d-4ca1-a7d8-3ba9e6c7a8ab",
                  "parentUUID": "f3df14d8-1ee3-4c2f-9ae3-f5572aa27bdd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1598,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1qr950qfz9().f[20]++;\ncov_1qr950qfz9().s[48]++;\ncy.get('#random-number').should(function ($div) {\n  cov_1qr950qfz9().f[21]++;\n  var n = (cov_1qr950qfz9().s[49]++, parseFloat($div.text()));\n  cov_1qr950qfz9().s[50]++;\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "a528ecdc-c141-421a-81e8-aa00a19413ab",
                  "parentUUID": "f3df14d8-1ee3-4c2f-9ae3-f5572aa27bdd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db6e360c-e892-4622-a826-52a5f71c6511",
                "e47b57f3-b0a6-428b-aa81-fd7edb0f189f",
                "a8eeaafe-4b6c-4563-9a7e-5e5f207b96c1",
                "8c8e6ec5-0060-4484-b228-ac211e2e2f28",
                "42beda90-940f-4705-8f3a-c183f33ca742",
                "db01a0b7-738d-4ca1-a7d8-3ba9e6c7a8ab",
                "a528ecdc-c141-421a-81e8-aa00a19413ab"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2368,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "31ad5ef0-7f32-4da2-9adc-8f831ec02e8f",
      "title": "",
      "fullFile": "cypress/integration/examples/connectors.spec.js",
      "file": "cypress/integration/examples/connectors.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "99de0ba4-8bef-424d-b566-c1594947366b",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 249,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1s1c0a8k4p().f[2]++;\ncov_1s1c0a8k4p().s[4]++;\n// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(function ($el, index, $list) {\n  cov_1s1c0a8k4p().f[3]++;\n  cov_1s1c0a8k4p().s[5]++;\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "c8a2423a-c5eb-473a-9120-62a0d5c3422b",
              "parentUUID": "99de0ba4-8bef-424d-b566-c1594947366b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1s1c0a8k4p().f[4]++;\ncov_1s1c0a8k4p().s[7]++;\n// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li') // calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "b40b1aaa-479d-48d1-a27c-0cadfe81b350",
              "parentUUID": "99de0ba4-8bef-424d-b566-c1594947366b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1s1c0a8k4p().f[5]++;\ncov_1s1c0a8k4p().s[9]++;\n// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden') // call the jquery method 'show' on the 'div.container'\n.invoke('show').should('be.visible');",
              "err": {},
              "uuid": "137b5fed-9d8f-4ce3-9aab-c35fc0773401",
              "parentUUID": "99de0ba4-8bef-424d-b566-c1594947366b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1s1c0a8k4p().f[6]++;\n// https://on.cypress.io/spread\nvar arr = (cov_1s1c0a8k4p().s[11]++, ['foo', 'bar', 'baz']);\ncov_1s1c0a8k4p().s[12]++;\ncy.wrap(arr).spread(function (foo, bar, baz) {\n  cov_1s1c0a8k4p().f[7]++;\n  cov_1s1c0a8k4p().s[13]++;\n  expect(foo).to.eq('foo');\n  cov_1s1c0a8k4p().s[14]++;\n  expect(bar).to.eq('bar');\n  cov_1s1c0a8k4p().s[15]++;\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "56fcbd18-e4dc-458e-a078-532110d13142",
              "parentUUID": "99de0ba4-8bef-424d-b566-c1594947366b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "99a2b1d1-0f3e-451c-83ad-47726d313769",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 125,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1s1c0a8k4p().f[9]++;\ncov_1s1c0a8k4p().s[18]++;\n// https://on.cypress.io/then\ncy.get('.connectors-list > li').then(function ($lis) {\n  cov_1s1c0a8k4p().f[10]++;\n  cov_1s1c0a8k4p().s[19]++;\n  expect($lis, '3 items').to.have.length(3);\n  cov_1s1c0a8k4p().s[20]++;\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  cov_1s1c0a8k4p().s[21]++;\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  cov_1s1c0a8k4p().s[22]++;\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "a013b372-dd62-47ce-870a-e09019bb0ac8",
                  "parentUUID": "99a2b1d1-0f3e-451c-83ad-47726d313769",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 115,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1s1c0a8k4p().f[11]++;\ncov_1s1c0a8k4p().s[24]++;\ncy.wrap(1).then(function (num) {\n  cov_1s1c0a8k4p().f[12]++;\n  cov_1s1c0a8k4p().s[25]++;\n  expect(num).to.equal(1);\n  cov_1s1c0a8k4p().s[26]++;\n  return 2;\n}).then(function (num) {\n  cov_1s1c0a8k4p().f[13]++;\n  cov_1s1c0a8k4p().s[27]++;\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "735c56fe-e804-47da-b87e-5182afa8f8a1",
                  "parentUUID": "99a2b1d1-0f3e-451c-83ad-47726d313769",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 111,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1s1c0a8k4p().f[14]++;\ncov_1s1c0a8k4p().s[29]++;\ncy.wrap(1).then(function (num) {\n  cov_1s1c0a8k4p().f[15]++;\n  cov_1s1c0a8k4p().s[30]++;\n  expect(num).to.equal(1); // note that nothing is returned from this callback\n}).then(function (num) {\n  cov_1s1c0a8k4p().f[16]++;\n  cov_1s1c0a8k4p().s[31]++;\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "7d095c42-1dec-4868-97b7-7d7a1b182d35",
                  "parentUUID": "99a2b1d1-0f3e-451c-83ad-47726d313769",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 106,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1s1c0a8k4p().f[17]++;\ncov_1s1c0a8k4p().s[33]++;\ncy.wrap(1).then(function (num) {\n  cov_1s1c0a8k4p().f[18]++;\n  cov_1s1c0a8k4p().s[34]++;\n  expect(num).to.equal(1); // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cov_1s1c0a8k4p().s[35]++;\n  cy.wrap(2);\n}).then(function (num) {\n  cov_1s1c0a8k4p().f[19]++;\n  cov_1s1c0a8k4p().s[36]++;\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "2e8376f9-41cb-40fc-9a52-db12285e0ca7",
                  "parentUUID": "99a2b1d1-0f3e-451c-83ad-47726d313769",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a013b372-dd62-47ce-870a-e09019bb0ac8",
                "735c56fe-e804-47da-b87e-5182afa8f8a1",
                "7d095c42-1dec-4868-97b7-7d7a1b182d35",
                "2e8376f9-41cb-40fc-9a52-db12285e0ca7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 457,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "c8a2423a-c5eb-473a-9120-62a0d5c3422b",
            "b40b1aaa-479d-48d1-a27c-0cadfe81b350",
            "137b5fed-9d8f-4ce3-9aab-c35fc0773401",
            "56fcbd18-e4dc-458e-a078-532110d13142"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 573,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "28718b97-b570-4053-9f63-06d661a8cae0",
      "title": "",
      "fullFile": "cypress/integration/examples/cookies.spec.js",
      "file": "cypress/integration/examples/cookies.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89259c83-2613-47e4-a78b-13f1be5f9929",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 367,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1vkusqrnb6().f[2]++;\ncov_1vkusqrnb6().s[6]++;\n// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click();\ncov_1vkusqrnb6().s[7]++;\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "a63d1509-fcef-427b-923e-c786ef22ea73",
              "parentUUID": "89259c83-2613-47e4-a78b-13f1be5f9929",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 230,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1vkusqrnb6().f[3]++;\ncov_1vkusqrnb6().s[9]++;\n// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncov_1vkusqrnb6().s[10]++;\ncy.get('#getCookies .set-a-cookie').click(); // cy.getCookies() yields an array of cookies\ncov_1vkusqrnb6().s[11]++;\ncy.getCookies().should('have.length', 1).should(function (cookies) {\n  cov_1vkusqrnb6().f[4]++;\n  cov_1vkusqrnb6().s[12]++;\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  cov_1vkusqrnb6().s[13]++;\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  cov_1vkusqrnb6().s[14]++;\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  cov_1vkusqrnb6().s[15]++;\n  expect(cookies[0]).to.have.property('secure', false);\n  cov_1vkusqrnb6().s[16]++;\n  expect(cookies[0]).to.have.property('domain');\n  cov_1vkusqrnb6().s[17]++;\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "cbd698e9-e8f7-4339-ac17-aa92f3bae947",
              "parentUUID": "89259c83-2613-47e4-a78b-13f1be5f9929",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 102,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1vkusqrnb6().f[5]++;\ncov_1vkusqrnb6().s[19]++;\n// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncov_1vkusqrnb6().s[20]++;\ncy.setCookie('foo', 'bar'); // cy.getCookie() yields a cookie object\ncov_1vkusqrnb6().s[21]++;\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "764775cc-00f5-46b5-915d-b00802cf9bc4",
              "parentUUID": "89259c83-2613-47e4-a78b-13f1be5f9929",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1vkusqrnb6().f[6]++;\ncov_1vkusqrnb6().s[23]++;\n// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncov_1vkusqrnb6().s[24]++;\ncy.get('#clearCookie .set-a-cookie').click();\ncov_1vkusqrnb6().s[25]++;\ncy.getCookie('token').should('have.property', 'value', '123ABC'); // cy.clearCookies() yields null\ncov_1vkusqrnb6().s[26]++;\ncy.clearCookie('token').should('be.null');\ncov_1vkusqrnb6().s[27]++;\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "9a6595cf-6a6b-4f9c-95a5-e946e38c711d",
              "parentUUID": "89259c83-2613-47e4-a78b-13f1be5f9929",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1vkusqrnb6().f[7]++;\ncov_1vkusqrnb6().s[29]++;\n// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncov_1vkusqrnb6().s[30]++;\ncy.get('#clearCookies .set-a-cookie').click();\ncov_1vkusqrnb6().s[31]++;\ncy.getCookies().should('have.length', 1); // cy.clearCookies() yields null\ncov_1vkusqrnb6().s[32]++;\ncy.clearCookies();\ncov_1vkusqrnb6().s[33]++;\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "fba12c78-848f-4439-9d7d-810b92271079",
              "parentUUID": "89259c83-2613-47e4-a78b-13f1be5f9929",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a63d1509-fcef-427b-923e-c786ef22ea73",
            "cbd698e9-e8f7-4339-ac17-aa92f3bae947",
            "764775cc-00f5-46b5-915d-b00802cf9bc4",
            "9a6595cf-6a6b-4f9c-95a5-e946e38c711d",
            "fba12c78-848f-4439-9d7d-810b92271079"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1321e07b-a199-45f1-87e9-75e07de4190e",
      "title": "",
      "fullFile": "cypress/integration/examples/cypress_api.spec.js",
      "file": "cypress/integration/examples/cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb93985e-c4dd-40c7-b327-531816a62c63",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 202,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1yd24qgavb().f[2]++;\ncov_1yd24qgavb().s[4]++;\nCypress.Commands.add('console', {\n  prevSubject: true\n}, function (subject, method) {\n  cov_1yd24qgavb().f[3]++;\n  cov_1yd24qgavb().s[5]++;\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = (cov_1yd24qgavb().b[0][0]++, method) || (cov_1yd24qgavb().b[0][1]++, 'log'); // log the subject to the console\n  // @ts-ignore TS7017\n  cov_1yd24qgavb().s[6]++;\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  cov_1yd24qgavb().s[7]++;\n  return subject;\n}); // @ts-ignore TS2339\ncov_1yd24qgavb().s[8]++;\ncy.get('button').console('info').then(function ($button) {// subject is still $button\n  cov_1yd24qgavb().f[4]++;\n});",
              "err": {},
              "uuid": "e54bb0e2-b38c-4eae-a50a-78c77a6f84f3",
              "parentUUID": "bb93985e-c4dd-40c7-b327-531816a62c63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e54bb0e2-b38c-4eae-a50a-78c77a6f84f3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 202,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9c0fa8dc-4db4-4db2-af78-31cb62f33510",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 141,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1yd24qgavb().f[7]++;\ncov_1yd24qgavb().s[13]++;\nCypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncov_1yd24qgavb().s[14]++;\ncy.setCookie('fakeCookie', '123ABC');\ncov_1yd24qgavb().s[15]++;\ncy.clearCookie('fakeCookie');\ncov_1yd24qgavb().s[16]++;\ncy.setCookie('fakeCookie', '123ABC');\ncov_1yd24qgavb().s[17]++;\ncy.clearCookie('fakeCookie');\ncov_1yd24qgavb().s[18]++;\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "c3e7f369-b230-4873-acc2-bb4baa77d314",
              "parentUUID": "9c0fa8dc-4db4-4db2-af78-31cb62f33510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1yd24qgavb().f[8]++;\ncov_1yd24qgavb().s[20]++;\n// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncov_1yd24qgavb().s[21]++;\ncy.setCookie('lastCookie', '789XYZ');\ncov_1yd24qgavb().s[22]++;\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "5208bf57-dcf5-40bf-a140-98c42ae0d9f6",
              "parentUUID": "9c0fa8dc-4db4-4db2-af78-31cb62f33510",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1yd24qgavb().f[9]++;\ncov_1yd24qgavb().s[24]++;\n// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "f25257d8-8403-432c-b119-ed76eb22788b",
              "parentUUID": "9c0fa8dc-4db4-4db2-af78-31cb62f33510",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c3e7f369-b230-4873-acc2-bb4baa77d314",
            "5208bf57-dcf5-40bf-a140-98c42ae0d9f6",
            "f25257d8-8403-432c-b119-ed76eb22788b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6689c9f-8a96-4c9d-b56c-4813bc11ed62",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 93,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1yd24qgavb().f[12]++;\ncov_1yd24qgavb().s[29]++;\n// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "58cf080c-08ae-48d1-82e8-3f48fdd8be70",
              "parentUUID": "d6689c9f-8a96-4c9d-b56c-4813bc11ed62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58cf080c-08ae-48d1-82e8-3f48fdd8be70"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 93,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0a465161-41a5-40c4-bf3c-aebaf7431392",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 540,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  \"/Users/deonte.mohamed/Development/personal_projects/interviewPrep/trelloapp/TestReport/assets/examples/cypress_api.spec.js/Cypress.config() -- Get and set configuration options (failed).png\",\n  \"/Users/deonte.mohamed/Development/personal_projects/interviewPrep/trelloapp/TestReport/assets/examples/cypress_api.spec.js.mp4\"\n]",
              "code": "cov_1yd24qgavb().f[15]++;\n// https://on.cypress.io/config\nvar myConfig = (cov_1yd24qgavb().s[34]++, Cypress.config());\ncov_1yd24qgavb().s[35]++;\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\ncov_1yd24qgavb().s[36]++;\nexpect(myConfig).to.have.property('baseUrl', null);\ncov_1yd24qgavb().s[37]++;\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\ncov_1yd24qgavb().s[38]++;\nexpect(myConfig).to.have.property('requestTimeout', 5000);\ncov_1yd24qgavb().s[39]++;\nexpect(myConfig).to.have.property('responseTimeout', 30000);\ncov_1yd24qgavb().s[40]++;\nexpect(myConfig).to.have.property('viewportHeight', 660);\ncov_1yd24qgavb().s[41]++;\nexpect(myConfig).to.have.property('viewportWidth', 1000);\ncov_1yd24qgavb().s[42]++;\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\ncov_1yd24qgavb().s[43]++;\nexpect(myConfig).to.have.property('waitForAnimations', true);\ncov_1yd24qgavb().s[44]++;\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\ncov_1yd24qgavb().s[45]++;\nCypress.config('pageLoadTimeout', 20000);\ncov_1yd24qgavb().s[46]++;\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\ncov_1yd24qgavb().s[47]++;\nCypress.config('pageLoadTimeout', 60000);",
              "err": {
                "message": "AssertionError: expected { Object (defaultCommandTimeout, projectId, ...) } to have property 'defaultCommandTimeout' of 4000, but got 15000",
                "estack": "AssertionError: expected { Object (defaultCommandTimeout, projectId, ...) } to have property 'defaultCommandTimeout' of 4000, but got 15000\n    at Context.eval (https://example.cypress.io/__cypress/tests?p=cypress/integration/examples/cypress_api.spec.js:2087:30)",
                "diff": "- 15000\n+ 4000\n"
              },
              "uuid": "e4548969-431a-4d72-9e47-1ec33b672ded",
              "parentUUID": "0a465161-41a5-40c4-bf3c-aebaf7431392",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e4548969-431a-4d72-9e47-1ec33b672ded"
          ],
          "pending": [],
          "skipped": [],
          "duration": 540,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "696301ca-92bc-4372-93c9-fab36e310474",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1yd24qgavb().f[18]++;\nvar hiddenP = (cov_1yd24qgavb().s[52]++, Cypress.$('.dom-p p.hidden').get(0));\nvar visibleP = (cov_1yd24qgavb().s[53]++, Cypress.$('.dom-p p.visible').get(0)); // our first paragraph has css class 'hidden'\ncov_1yd24qgavb().s[54]++;\nexpect(Cypress.dom.isHidden(hiddenP)).to.be[\"true\"];\ncov_1yd24qgavb().s[55]++;\nexpect(Cypress.dom.isHidden(visibleP)).to.be[\"false\"];",
              "err": {},
              "uuid": "785eba8f-4341-4b53-9d40-995a3c820e05",
              "parentUUID": "696301ca-92bc-4372-93c9-fab36e310474",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "785eba8f-4341-4b53-9d40-995a3c820e05"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "62dd0139-e390-4098-94bc-e97377cc37e1",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 103,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1yd24qgavb().f[21]++;\ncov_1yd24qgavb().s[60]++;\n// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\ncov_1yd24qgavb().s[61]++;\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\ncov_1yd24qgavb().s[62]++;\nCypress.env('api_server', 'http://localhost:8888/v2/');\ncov_1yd24qgavb().s[63]++;\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\ncov_1yd24qgavb().s[64]++;\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\ncov_1yd24qgavb().s[65]++;\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "005affd8-cfa1-4255-83c4-b4a58b82a34a",
              "parentUUID": "62dd0139-e390-4098-94bc-e97377cc37e1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "005affd8-cfa1-4255-83c4-b4a58b82a34a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 103,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f3b0825d-df46-4887-9214-8b59fc6d6d78",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log\n    cov_1yd24qgavb().f[24]++;",
              "err": {},
              "uuid": "21a9e408-0288-4969-a9ea-275b7ce31ebb",
              "parentUUID": "f3b0825d-df46-4887-9214-8b59fc6d6d78",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "21a9e408-0288-4969-a9ea-275b7ce31ebb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 115,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "54ab3237-8917-4179-8a1c-52ccfb5d55d6",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1yd24qgavb().f[27]++;\ncov_1yd24qgavb().s[74]++;\n// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "c9baa1f8-2378-4789-8c51-cd98c3678ecd",
              "parentUUID": "54ab3237-8917-4179-8a1c-52ccfb5d55d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c9baa1f8-2378-4789-8c51-cd98c3678ecd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 96,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a3cf47b1-b2aa-4961-8f2b-8f01c196fe85",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1yd24qgavb().f[30]++;\ncov_1yd24qgavb().s[79]++;\n// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "4cd7a3b1-55b5-4d42-92f8-cf3472a0b9b2",
              "parentUUID": "a3cf47b1-b2aa-4961-8f2b-8f01c196fe85",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4cd7a3b1-55b5-4d42-92f8-cf3472a0b9b2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 85,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e8952b75-4d5e-47af-8f20-1a3ba82ab596",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1yd24qgavb().f[33]++;\ncov_1yd24qgavb().s[84]++;\n// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "84b387e6-f6cb-4d36-9bcc-f3d52bb16127",
              "parentUUID": "e8952b75-4d5e-47af-8f20-1a3ba82ab596",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "84b387e6-f6cb-4d36-9bcc-f3d52bb16127"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 117,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5f068bf2-2516-445e-8583-672178dcd0f5",
      "title": "",
      "fullFile": "cypress/integration/examples/files.spec.js",
      "file": "cypress/integration/examples/files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2acb20a5-789d-4778-aae2-b8b3f6e5778f",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 346,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oyji2ewo4().f[3]++;\ncov_oyji2ewo4().s[7]++;\n// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncov_oyji2ewo4().s[8]++;\ncy.get('.fixture-btn').click();\ncov_oyji2ewo4().s[9]++;\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "5935f3c2-a034-4cd4-b026-8a43a22c1c5d",
              "parentUUID": "2acb20a5-789d-4778-aae2-b8b3f6e5778f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 96,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oyji2ewo4().f[4]++;\ncov_oyji2ewo4().s[11]++;\n// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n// @ts-ignore\ncov_oyji2ewo4().s[12]++;\ncy.wrap(this.example, 'fixture vs require').should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "e7dda889-8bf3-4565-82a7-2b50871df2b8",
              "parentUUID": "2acb20a5-789d-4778-aae2-b8b3f6e5778f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 113,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oyji2ewo4().f[5]++;\ncov_oyji2ewo4().s[14]++;\n// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile('cypress.json').then(function (json) {\n  cov_oyji2ewo4().f[6]++;\n  cov_oyji2ewo4().s[15]++;\n  expect(json).to.be.an('object');\n});",
              "err": {},
              "uuid": "2c462bde-8752-45f3-b9e1-0d20bda55298",
              "parentUUID": "2acb20a5-789d-4778-aae2-b8b3f6e5778f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_oyji2ewo4().f[7]++;\ncov_oyji2ewo4().s[17]++;\n// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  cov_oyji2ewo4().f[8]++;\n  cov_oyji2ewo4().s[18]++;\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncov_oyji2ewo4().s[19]++;\ncy.fixture('users').should(function (users) {\n  cov_oyji2ewo4().f[9]++;\n  cov_oyji2ewo4().s[20]++;\n  expect(users[0].name).to.exist;\n}); // JavaScript arrays and objects are stringified\n// and formatted into text.\ncov_oyji2ewo4().s[21]++;\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncov_oyji2ewo4().s[22]++;\ncy.fixture('profile').should(function (profile) {\n  cov_oyji2ewo4().f[10]++;\n  cov_oyji2ewo4().s[23]++;\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "14524cfb-75f9-495e-86ff-f3ff8068d083",
              "parentUUID": "2acb20a5-789d-4778-aae2-b8b3f6e5778f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5935f3c2-a034-4cd4-b026-8a43a22c1c5d",
            "e7dda889-8bf3-4565-82a7-2b50871df2b8",
            "2c462bde-8752-45f3-b9e1-0d20bda55298",
            "14524cfb-75f9-495e-86ff-f3ff8068d083"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1007,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bc7bfe94-4d29-4e95-8bff-ae242e5f0af0",
      "title": "",
      "fullFile": "cypress/integration/examples/local_storage.spec.js",
      "file": "cypress/integration/examples/local_storage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "69774c2e-2890-49b1-b159-082553c349f7",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 595,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_v5azaw5gv().f[2]++;\ncov_v5azaw5gv().s[4]++;\n// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(function () {\n  cov_v5azaw5gv().f[3]++;\n  cov_v5azaw5gv().s[5]++;\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  cov_v5azaw5gv().s[6]++;\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  cov_v5azaw5gv().s[7]++;\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // clearLocalStorage() yields the localStorage object\ncov_v5azaw5gv().s[8]++;\ncy.clearLocalStorage().should(function (ls) {\n  cov_v5azaw5gv().f[4]++;\n  cov_v5azaw5gv().s[9]++;\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  cov_v5azaw5gv().s[10]++;\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  cov_v5azaw5gv().s[11]++;\n  expect(ls.getItem('prop3')).to.be[\"null\"];\n}); // Clear key matching string in Local Storage\ncov_v5azaw5gv().s[12]++;\ncy.get('.ls-btn').click().should(function () {\n  cov_v5azaw5gv().f[5]++;\n  cov_v5azaw5gv().s[13]++;\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  cov_v5azaw5gv().s[14]++;\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  cov_v5azaw5gv().s[15]++;\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncov_v5azaw5gv().s[16]++;\ncy.clearLocalStorage('prop1').should(function (ls) {\n  cov_v5azaw5gv().f[6]++;\n  cov_v5azaw5gv().s[17]++;\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  cov_v5azaw5gv().s[18]++;\n  expect(ls.getItem('prop2')).to.eq('blue');\n  cov_v5azaw5gv().s[19]++;\n  expect(ls.getItem('prop3')).to.eq('magenta');\n}); // Clear keys matching regex in Local Storage\ncov_v5azaw5gv().s[20]++;\ncy.get('.ls-btn').click().should(function () {\n  cov_v5azaw5gv().f[7]++;\n  cov_v5azaw5gv().s[21]++;\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  cov_v5azaw5gv().s[22]++;\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  cov_v5azaw5gv().s[23]++;\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncov_v5azaw5gv().s[24]++;\ncy.clearLocalStorage(/prop1|2/).should(function (ls) {\n  cov_v5azaw5gv().f[8]++;\n  cov_v5azaw5gv().s[25]++;\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  cov_v5azaw5gv().s[26]++;\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  cov_v5azaw5gv().s[27]++;\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "52c3c3e1-1f76-40c2-834e-e553f668e398",
              "parentUUID": "69774c2e-2890-49b1-b159-082553c349f7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "52c3c3e1-1f76-40c2-834e-e553f668e398"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 595,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "5722b073-a2a2-47f7-9694-d98474ec2c7d",
      "title": "",
      "fullFile": "cypress/integration/examples/location.spec.js",
      "file": "cypress/integration/examples/location.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c70485fe-c228-48d5-b629-fa98f9535b77",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1f93z5z880().f[2]++;\ncov_1f93z5z880().s[4]++;\n// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "ad991a12-bd6c-4e99-b2ff-84475af88688",
              "parentUUID": "c70485fe-c228-48d5-b629-fa98f9535b77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1f93z5z880().f[3]++;\ncov_1f93z5z880().s[6]++;\n// https://on.cypress.io/location\ncy.location().should(function (location) {\n  cov_1f93z5z880().f[4]++;\n  cov_1f93z5z880().s[7]++;\n  expect(location.hash).to.be.empty;\n  cov_1f93z5z880().s[8]++;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  cov_1f93z5z880().s[9]++;\n  expect(location.host).to.eq('example.cypress.io');\n  cov_1f93z5z880().s[10]++;\n  expect(location.hostname).to.eq('example.cypress.io');\n  cov_1f93z5z880().s[11]++;\n  expect(location.origin).to.eq('https://example.cypress.io');\n  cov_1f93z5z880().s[12]++;\n  expect(location.pathname).to.eq('/commands/location');\n  cov_1f93z5z880().s[13]++;\n  expect(location.port).to.eq('');\n  cov_1f93z5z880().s[14]++;\n  expect(location.protocol).to.eq('https:');\n  cov_1f93z5z880().s[15]++;\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "49c19a17-0700-4bb8-994e-73fdab304099",
              "parentUUID": "c70485fe-c228-48d5-b629-fa98f9535b77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1f93z5z880().f[5]++;\ncov_1f93z5z880().s[17]++;\n// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "5edb97c4-0879-4357-b87b-321065f15237",
              "parentUUID": "c70485fe-c228-48d5-b629-fa98f9535b77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad991a12-bd6c-4e99-b2ff-84475af88688",
            "49c19a17-0700-4bb8-994e-73fdab304099",
            "5edb97c4-0879-4357-b87b-321065f15237"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 420,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d1276102-5ac9-4b77-9b99-ef80363a75a1",
      "title": "",
      "fullFile": "cypress/integration/examples/misc.spec.js",
      "file": "cypress/integration/examples/misc.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "74a57620-4471-4689-bb3f-aeca908efba4",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 429,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1h11zc6hu0().f[2]++;\ncov_1h11zc6hu0().s[4]++;\n// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(function () {\n  cov_1h11zc6hu0().f[3]++;\n  cov_1h11zc6hu0().s[5]++;\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end(); // queries the entire table again\n  cov_1h11zc6hu0().s[6]++;\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "093597c1-4043-4d27-b025-ced4c867078e",
              "parentUUID": "74a57620-4471-4689-bb3f-aeca908efba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 496,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1h11zc6hu0().f[4]++;\ncov_1h11zc6hu0().s[8]++;\n// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(\"Platform \".concat(Cypress.platform, \" architecture \").concat(Cypress.arch)); // on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nvar isCircleOnWindows = (cov_1h11zc6hu0().s[9]++, (cov_1h11zc6hu0().b[0][0]++, Cypress.platform === 'win32') && (cov_1h11zc6hu0().b[0][1]++, Cypress.env('circle')));\ncov_1h11zc6hu0().s[10]++;\nif (isCircleOnWindows) {\n  cov_1h11zc6hu0().b[1][0]++;\n  cov_1h11zc6hu0().s[11]++;\n  cy.log('Skipping test on CircleCI');\n  cov_1h11zc6hu0().s[12]++;\n  return;\n} else {\n  cov_1h11zc6hu0().b[1][1]++;\n} // cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\n\nvar isShippable = (cov_1h11zc6hu0().s[13]++, (cov_1h11zc6hu0().b[2][0]++, Cypress.platform === 'linux') && (cov_1h11zc6hu0().b[2][1]++, Cypress.env('shippable')));\ncov_1h11zc6hu0().s[14]++;\nif (isShippable) {\n  cov_1h11zc6hu0().b[3][0]++;\n  cov_1h11zc6hu0().s[15]++;\n  cy.log('Skipping test on ShippableCI');\n  cov_1h11zc6hu0().s[16]++;\n  return;\n} else {\n  cov_1h11zc6hu0().b[3][1]++;\n}\ncov_1h11zc6hu0().s[17]++;\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\ncov_1h11zc6hu0().s[18]++;\nif (Cypress.platform === 'win32') {\n  cov_1h11zc6hu0().b[4][0]++;\n  cov_1h11zc6hu0().s[19]++;\n  cy.exec('print cypress.json').its('stderr').should('be.empty');\n} else {\n  cov_1h11zc6hu0().b[4][1]++;\n  cov_1h11zc6hu0().s[20]++;\n  cy.exec('cat cypress.json').its('stderr').should('be.empty');\n  cov_1h11zc6hu0().s[21]++;\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "d7316f94-9e1c-4bfb-b48b-35e0d2785925",
              "parentUUID": "74a57620-4471-4689-bb3f-aeca908efba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 308,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1h11zc6hu0().f[5]++;\ncov_1h11zc6hu0().s[23]++;\n// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncov_1h11zc6hu0().s[24]++;\ncy.focused().should('have.id', 'name');\ncov_1h11zc6hu0().s[25]++;\ncy.get('.misc-form').find('#description').click();\ncov_1h11zc6hu0().s[26]++;\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "13770153-4f14-4749-b7c2-29a5cdef09b6",
              "parentUUID": "74a57620-4471-4689-bb3f-aeca908efba4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 117,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1h11zc6hu0().f[11]++;\ncov_1h11zc6hu0().s[33]++;\n// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "9e2e4656-80c6-4512-a2b1-dd713ceab836",
              "parentUUID": "74a57620-4471-4689-bb3f-aeca908efba4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "43de9eb2-18da-4156-88de-30fb829424ba",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 1785,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1h11zc6hu0().f[7]++;\ncov_1h11zc6hu0().s[29]++;\n// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "ae0aee58-908e-4e73-aa53-a96f0a2a9574",
                  "parentUUID": "43de9eb2-18da-4156-88de-30fb829424ba",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 115,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cov_1h11zc6hu0().f[8]++;\ncov_1h11zc6hu0().s[31]++;\nCypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot: function onBeforeScreenshot() {\n    cov_1h11zc6hu0().f[9]++;\n  },\n  onAfterScreenshot: function onAfterScreenshot() {\n    cov_1h11zc6hu0().f[10]++;\n  }\n});",
                  "err": {},
                  "uuid": "a24b8be6-3bec-477e-9d17-09a1354e7399",
                  "parentUUID": "43de9eb2-18da-4156-88de-30fb829424ba",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ae0aee58-908e-4e73-aa53-a96f0a2a9574",
                "a24b8be6-3bec-477e-9d17-09a1354e7399"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1900,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "093597c1-4043-4d27-b025-ced4c867078e",
            "d7316f94-9e1c-4bfb-b48b-35e0d2785925",
            "13770153-4f14-4749-b7c2-29a5cdef09b6",
            "9e2e4656-80c6-4512-a2b1-dd713ceab836"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1350,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "15f0ef00-9862-4917-92d8-460b16d1f30a",
      "title": "",
      "fullFile": "cypress/integration/examples/navigation.spec.js",
      "file": "cypress/integration/examples/navigation.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d1c774d-dba3-4ee6-8873-2b6983675c3f",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 898,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_104d3uy7no().f[2]++;\ncov_104d3uy7no().s[6]++;\n// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncov_104d3uy7no().s[7]++;\ncy.go('back');\ncov_104d3uy7no().s[8]++;\ncy.location('pathname').should('not.include', 'navigation');\ncov_104d3uy7no().s[9]++;\ncy.go('forward');\ncov_104d3uy7no().s[10]++;\ncy.location('pathname').should('include', 'navigation'); // clicking back\ncov_104d3uy7no().s[11]++;\ncy.go(-1);\ncov_104d3uy7no().s[12]++;\ncy.location('pathname').should('not.include', 'navigation'); // clicking forward\ncov_104d3uy7no().s[13]++;\ncy.go(1);\ncov_104d3uy7no().s[14]++;\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "bc64cfdf-5a38-41ac-9c6f-e4b32b9cab01",
              "parentUUID": "4d1c774d-dba3-4ee6-8873-2b6983675c3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_104d3uy7no().f[3]++;\ncov_104d3uy7no().s[16]++;\n// https://on.cypress.io/reload\ncy.reload(); // reload the page without using the cache\ncov_104d3uy7no().s[17]++;\ncy.reload(true);",
              "err": {},
              "uuid": "a8443d86-0132-49d9-8016-0f2cacfd0817",
              "parentUUID": "4d1c774d-dba3-4ee6-8873-2b6983675c3f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_104d3uy7no().f[4]++;\ncov_104d3uy7no().s[19]++;\n// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad: function onBeforeLoad(contentWindow) {\n    cov_104d3uy7no().f[5]++;\n    cov_104d3uy7no().s[20]++;\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  },\n  onLoad: function onLoad(contentWindow) {\n    cov_104d3uy7no().f[6]++;\n    cov_104d3uy7no().s[21]++;\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  }\n});",
              "err": {},
              "uuid": "c10b8508-0a07-4d3a-9ded-0d2ac1f07d1a",
              "parentUUID": "4d1c774d-dba3-4ee6-8873-2b6983675c3f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "bc64cfdf-5a38-41ac-9c6f-e4b32b9cab01",
            "a8443d86-0132-49d9-8016-0f2cacfd0817",
            "c10b8508-0a07-4d3a-9ded-0d2ac1f07d1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1709,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3d9a06f3-0b50-43f2-80d3-089862338e80",
      "title": "",
      "fullFile": "cypress/integration/examples/network_requests.spec.js",
      "file": "cypress/integration/examples/network_requests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6dcba279-65a0-4637-95fc-eb7579cfbc40",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 482,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1h4w0e0bx7().f[2]++;\ncov_1h4w0e0bx7().s[4]++;\n// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(function (response) {\n  cov_1h4w0e0bx7().f[3]++;\n  cov_1h4w0e0bx7().s[5]++;\n  expect(response.status).to.eq(200); // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  cov_1h4w0e0bx7().s[6]++;\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  cov_1h4w0e0bx7().s[7]++;\n  expect(response).to.have.property('headers');\n  cov_1h4w0e0bx7().s[8]++;\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "d76537b9-a19e-4a8c-b22c-68e8a0ce9774",
              "parentUUID": "6dcba279-65a0-4637-95fc-eb7579cfbc40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 528,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1h4w0e0bx7().f[4]++;\ncov_1h4w0e0bx7().s[10]++;\ncy.request('https://jsonplaceholder.cypress.io/comments').then(function (response) {\n  cov_1h4w0e0bx7().f[5]++;\n  cov_1h4w0e0bx7().s[11]++;\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  cov_1h4w0e0bx7().s[12]++;\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  cov_1h4w0e0bx7().s[13]++;\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "dbe4cdc8-0145-49b5-b4aa-dd364354c83f",
              "parentUUID": "6dcba279-65a0-4637-95fc-eb7579cfbc40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1h4w0e0bx7().f[6]++;\ncov_1h4w0e0bx7().s[15]++;\n// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "19d376db-16f2-4663-abae-a6838199b215",
              "parentUUID": "6dcba279-65a0-4637-95fc-eb7579cfbc40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 423,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1h4w0e0bx7().f[7]++;\ncov_1h4w0e0bx7().s[17]++;\n// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(function (user) {\n  cov_1h4w0e0bx7().f[8]++;\n  cov_1h4w0e0bx7().s[18]++;\n  expect(user).property('id').to.be.a('number'); // make a new post on behalf of the user\n  cov_1h4w0e0bx7().s[19]++;\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n}) // note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(function (response) {\n  cov_1h4w0e0bx7().f[9]++;\n  cov_1h4w0e0bx7().s[20]++;\n  expect(response).property('status').to.equal(201); // new entity created\n  cov_1h4w0e0bx7().s[21]++;\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  }); // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  cov_1h4w0e0bx7().s[22]++;\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100); // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  cov_1h4w0e0bx7().s[23]++;\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "b14793de-631f-4a16-b17c-2d3f943b7ec0",
              "parentUUID": "6dcba279-65a0-4637-95fc-eb7579cfbc40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1h4w0e0bx7().f[10]++;\ncov_1h4w0e0bx7().s[25]++;\n// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  cov_1h4w0e0bx7().f[11]++;\n  cov_1h4w0e0bx7().s[26]++;\n  // NOTE 👀\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  cov_1h4w0e0bx7().f[12]++;\n  cov_1h4w0e0bx7().s[27]++;\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "ae89a1a4-fc3f-44e2-9879-be388362090b",
              "parentUUID": "6dcba279-65a0-4637-95fc-eb7579cfbc40",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 1078,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1h4w0e0bx7().f[13]++;\n// https://on.cypress.io/intercept\nvar message = (cov_1h4w0e0bx7().s[29]++, 'whoa, this comment does not exist'); // Listen to GET to comments/1\ncov_1h4w0e0bx7().s[30]++;\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncov_1h4w0e0bx7().s[31]++;\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncov_1h4w0e0bx7().s[32]++;\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]); // Listen to POST to comments\ncov_1h4w0e0bx7().s[33]++;\ncy.intercept('POST', '**/comments').as('postComment'); // we have code that posts a comment when\n// the button is clicked in scripts.js\ncov_1h4w0e0bx7().s[34]++;\ncy.get('.network-post').click();\ncov_1h4w0e0bx7().s[35]++;\ncy.wait('@postComment').should(function (_ref) {\n  var request = _ref.request,\n      response = _ref.response;\n  cov_1h4w0e0bx7().f[14]++;\n  cov_1h4w0e0bx7().s[36]++;\n  expect(request.body).to.include('email');\n  cov_1h4w0e0bx7().s[37]++;\n  expect(request.headers).to.have.property('content-type');\n  cov_1h4w0e0bx7().s[38]++;\n  expect((cov_1h4w0e0bx7().b[0][0]++, response) && (cov_1h4w0e0bx7().b[0][1]++, response.body)).to.have.property('name', 'Using POST in cy.intercept()');\n}); // Stub a response to PUT comments/ ****\ncov_1h4w0e0bx7().s[39]++;\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment'); // we have code that puts a comment when\n// the button is clicked in scripts.js\ncov_1h4w0e0bx7().s[40]++;\ncy.get('.network-put').click();\ncov_1h4w0e0bx7().s[41]++;\ncy.wait('@putComment'); // our 404 statusCode logic in scripts.js executed\ncov_1h4w0e0bx7().s[42]++;\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "a68efa93-1e63-4d34-92b7-dba5389d8473",
              "parentUUID": "6dcba279-65a0-4637-95fc-eb7579cfbc40",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d76537b9-a19e-4a8c-b22c-68e8a0ce9774",
            "dbe4cdc8-0145-49b5-b4aa-dd364354c83f",
            "19d376db-16f2-4663-abae-a6838199b215",
            "b14793de-631f-4a16-b17c-2d3f943b7ec0",
            "ae89a1a4-fc3f-44e2-9879-be388362090b",
            "a68efa93-1e63-4d34-92b7-dba5389d8473"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3008,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e4fb0ab1-22d4-447a-8939-a5782dd1d20d",
      "title": "",
      "fullFile": "cypress/integration/examples/querying.spec.js",
      "file": "cypress/integration/examples/querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "85f6fe8d-3a24-4386-b74c-e326694cd96f",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_r683cwicv().f[2]++;\ncov_r683cwicv().s[4]++;\n// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncov_r683cwicv().s[5]++;\ncy.get('.query-btn').should('contain', 'Button');\ncov_r683cwicv().s[6]++;\ncy.get('#querying .well>button:first').should('contain', 'Button'); //              ↲\n// Use CSS selectors just like jQuery\ncov_r683cwicv().s[7]++;\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example'); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncov_r683cwicv().s[8]++;\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example'); // or you can get element's CSS property\ncov_r683cwicv().s[9]++;\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static'); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncov_r683cwicv().s[10]++;\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "26746511-a6de-4dc4-af35-1058c1558a80",
              "parentUUID": "85f6fe8d-3a24-4386-b74c-e326694cd96f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 133,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_r683cwicv().f[3]++;\ncov_r683cwicv().s[12]++;\n// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third'); // we can pass a regexp to `.contains()`\ncov_r683cwicv().s[13]++;\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncov_r683cwicv().s[14]++;\ncy.get('.query-list').contains('apples').should('have.class', 'first'); // passing a selector to contains will\n// yield the selector containing the text\ncov_r683cwicv().s[15]++;\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncov_r683cwicv().s[16]++;\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "7514746f-3866-43c9-a521-f4a24acc97f4",
              "parentUUID": "85f6fe8d-3a24-4386-b74c-e326694cd96f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 122,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_r683cwicv().f[4]++;\ncov_r683cwicv().s[18]++;\n// https://on.cypress.io/within\ncy.get('.query-form').within(function () {\n  cov_r683cwicv().f[5]++;\n  cov_r683cwicv().s[19]++;\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cov_r683cwicv().s[20]++;\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "e161ea40-6075-4baf-aa8a-b0f581ccbf97",
              "parentUUID": "85f6fe8d-3a24-4386-b74c-e326694cd96f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 104,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_r683cwicv().f[6]++;\ncov_r683cwicv().s[22]++;\n// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncov_r683cwicv().s[23]++;\ncy.get('.query-ul').within(function () {\n  cov_r683cwicv().f[7]++;\n  cov_r683cwicv().s[24]++;\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "55885310-9f7f-44e3-9cac-428a0784a8d8",
              "parentUUID": "85f6fe8d-3a24-4386-b74c-e326694cd96f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 739,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_r683cwicv().f[8]++;\ncov_r683cwicv().s[26]++;\n// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(function () {\n  cov_r683cwicv().f[9]++;\n  cov_r683cwicv().s[27]++;\n  // Worst - too generic, no context\n  cy.get('button').click(); // Bad. Coupled to styling. Highly subject to change.\n  cov_r683cwicv().s[28]++;\n  cy.get('.btn.btn-large').click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cov_r683cwicv().s[29]++;\n  cy.get('[name=submission]').click(); // Better. But still coupled to styling or JS event listeners.\n  cov_r683cwicv().s[30]++;\n  cy.get('#main').click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cov_r683cwicv().s[31]++;\n  cy.get('#main[role=button]').click(); // Much better. But still coupled to text content that may change.\n  cov_r683cwicv().s[32]++;\n  cy.contains('Submit').click(); // Best. Insulated from all changes.\n  cov_r683cwicv().s[33]++;\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "522fdf61-f587-43dd-b72c-a279b08f6da5",
              "parentUUID": "85f6fe8d-3a24-4386-b74c-e326694cd96f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26746511-a6de-4dc4-af35-1058c1558a80",
            "7514746f-3866-43c9-a521-f4a24acc97f4",
            "e161ea40-6075-4baf-aa8a-b0f581ccbf97",
            "55885310-9f7f-44e3-9cac-428a0784a8d8",
            "522fdf61-f587-43dd-b72c-a279b08f6da5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1354,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "a77e2997-6a4c-4491-8673-31b277e7f4d0",
      "title": "",
      "fullFile": "cypress/integration/examples/spies_stubs_clocks.spec.js",
      "file": "cypress/integration/examples/spies_stubs_clocks.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f7099758-f806-45f7-a394-dd7602affee9",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 272,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_xbpmbu0cb().f[1]++;\ncov_xbpmbu0cb().s[2]++;\n// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = (cov_xbpmbu0cb().s[3]++, {\n  foo: function foo() {\n    cov_xbpmbu0cb().f[2]++;\n  }\n});\nvar spy = (cov_xbpmbu0cb().s[4]++, cy.spy(obj, 'foo').as('anyArgs'));\ncov_xbpmbu0cb().s[5]++;\nobj.foo();\ncov_xbpmbu0cb().s[6]++;\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "58a2c6cc-3d31-4c77-85b6-79cb23a4edbe",
              "parentUUID": "f7099758-f806-45f7-a394-dd7602affee9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_xbpmbu0cb().f[3]++;\ncov_xbpmbu0cb().s[8]++;\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = (cov_xbpmbu0cb().s[9]++, {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo: function foo(x) {\n    cov_xbpmbu0cb().f[4]++;\n    cov_xbpmbu0cb().s[10]++;\n    console.log('obj.foo called with', x);\n  }\n});\ncov_xbpmbu0cb().s[11]++;\ncy.spy(obj, 'foo').as('foo');\ncov_xbpmbu0cb().s[12]++;\nsetTimeout(function () {\n  cov_xbpmbu0cb().f[5]++;\n  cov_xbpmbu0cb().s[13]++;\n  obj.foo('first');\n}, 500);\ncov_xbpmbu0cb().s[14]++;\nsetTimeout(function () {\n  cov_xbpmbu0cb().f[6]++;\n  cov_xbpmbu0cb().s[15]++;\n  obj.foo('second');\n}, 2500);\ncov_xbpmbu0cb().s[16]++;\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "3391e5f4-9b48-46d9-b62a-cefe350aa64d",
              "parentUUID": "f7099758-f806-45f7-a394-dd7602affee9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_xbpmbu0cb().f[7]++;\ncov_xbpmbu0cb().s[18]++;\n// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = (cov_xbpmbu0cb().s[19]++, {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo: function foo(a, b) {\n    cov_xbpmbu0cb().f[8]++;\n    cov_xbpmbu0cb().s[20]++;\n    console.log('a', a, 'b', b);\n  }\n});\nvar stub = (cov_xbpmbu0cb().s[21]++, cy.stub(obj, 'foo').as('foo'));\ncov_xbpmbu0cb().s[22]++;\nobj.foo('foo', 'bar');\ncov_xbpmbu0cb().s[23]++;\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "12d92604-e06c-498d-a975-fc91d6d80c87",
              "parentUUID": "f7099758-f806-45f7-a394-dd7602affee9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 205,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_xbpmbu0cb().f[9]++;\n// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = (cov_xbpmbu0cb().s[25]++, new Date(Date.UTC(2017, 2, 14)).getTime());\ncov_xbpmbu0cb().s[26]++;\ncy.clock(now);\ncov_xbpmbu0cb().s[27]++;\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncov_xbpmbu0cb().s[28]++;\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "2769531b-7bbb-4bf5-8b61-8ab38b716508",
              "parentUUID": "f7099758-f806-45f7-a394-dd7602affee9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 282,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_xbpmbu0cb().f[10]++;\n// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = (cov_xbpmbu0cb().s[30]++, new Date(Date.UTC(2017, 2, 14)).getTime());\ncov_xbpmbu0cb().s[31]++;\ncy.clock(now);\ncov_xbpmbu0cb().s[32]++;\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncov_xbpmbu0cb().s[33]++;\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncov_xbpmbu0cb().s[34]++;\ncy.tick(10000); // 10 seconds passed\ncov_xbpmbu0cb().s[35]++;\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "6b0fff82-4b3e-4b8d-9cfc-e9035f5262f9",
              "parentUUID": "f7099758-f806-45f7-a394-dd7602affee9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_xbpmbu0cb().f[11]++;\n// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar greeter = (cov_xbpmbu0cb().s[37]++, {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet: function greet(name) {\n    cov_xbpmbu0cb().f[12]++;\n    cov_xbpmbu0cb().s[38]++;\n    return \"Hello, \".concat(name, \"!\");\n  }\n});\ncov_xbpmbu0cb().s[39]++;\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number)[\"throws\"](new Error('Invalid name'));\ncov_xbpmbu0cb().s[40]++;\nexpect(greeter.greet('World')).to.equal('Hi'); // @ts-ignore\ncov_xbpmbu0cb().s[41]++;\nexpect(function () {\n  cov_xbpmbu0cb().f[13]++;\n  cov_xbpmbu0cb().s[42]++;\n  return greeter.greet(42);\n}).to[\"throw\"]('Invalid name');\ncov_xbpmbu0cb().s[43]++;\nexpect(greeter.greet).to.have.been.calledTwice; // non-matched calls goes the actual method\n// @ts-ignore\ncov_xbpmbu0cb().s[44]++;\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "35528a57-f761-45aa-90f1-b2eaffe7913d",
              "parentUUID": "f7099758-f806-45f7-a394-dd7602affee9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 26,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_xbpmbu0cb().f[14]++;\n// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar calculator = (cov_xbpmbu0cb().s[46]++, {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add: function add(a, b) {\n    cov_xbpmbu0cb().f[15]++;\n    cov_xbpmbu0cb().s[47]++;\n    return a + b;\n  }\n});\nvar spy = (cov_xbpmbu0cb().s[48]++, cy.spy(calculator, 'add').as('add'));\ncov_xbpmbu0cb().s[49]++;\nexpect(calculator.add(2, 3)).to.equal(5); // if we want to assert the exact values used during the call\ncov_xbpmbu0cb().s[50]++;\nexpect(spy).to.be.calledWith(2, 3); // let's confirm \"add\" method was called with two numbers\ncov_xbpmbu0cb().s[51]++;\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number); // alternatively, provide the value to match\ncov_xbpmbu0cb().s[52]++;\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3)); // match any value\ncov_xbpmbu0cb().s[53]++;\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3); // match any value from a list\ncov_xbpmbu0cb().s[54]++;\nexpect(spy).to.be.calledWith(Cypress.sinon.match[\"in\"]([1, 2, 3]), 3);\n/**\n * Returns true if the given number is event\n * @param {number} x\n */\ncov_xbpmbu0cb().s[55]++;\nvar isEven = function isEven(x) {\n  cov_xbpmbu0cb().f[16]++;\n  cov_xbpmbu0cb().s[56]++;\n  return x % 2 === 0;\n}; // expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\n\ncov_xbpmbu0cb().s[57]++;\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\ncov_xbpmbu0cb().s[58]++;\nvar isGreaterThan = function isGreaterThan(limit) {\n  cov_xbpmbu0cb().f[17]++;\n  cov_xbpmbu0cb().s[59]++;\n  return function (x) {\n    cov_xbpmbu0cb().f[18]++;\n    cov_xbpmbu0cb().s[60]++;\n    return x > limit;\n  };\n};\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\n\ncov_xbpmbu0cb().s[61]++;\nvar isLessThan = function isLessThan(limit) {\n  cov_xbpmbu0cb().f[19]++;\n  cov_xbpmbu0cb().s[62]++;\n  return function (x) {\n    cov_xbpmbu0cb().f[20]++;\n    cov_xbpmbu0cb().s[63]++;\n    return x < limit;\n  };\n}; // you can combine several matchers using \"and\", \"or\"\n\ncov_xbpmbu0cb().s[64]++;\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\ncov_xbpmbu0cb().s[65]++;\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3))); // matchers can be used from BDD assertions\ncov_xbpmbu0cb().s[66]++;\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3)); // you can alias matchers for shorter test code\nvar _ref = (cov_xbpmbu0cb().s[67]++, Cypress.sinon),\n    M = _ref.match;\ncov_xbpmbu0cb().s[68]++;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "38e37f26-5c88-417a-81cf-e617140d28a2",
              "parentUUID": "f7099758-f806-45f7-a394-dd7602affee9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58a2c6cc-3d31-4c77-85b6-79cb23a4edbe",
            "3391e5f4-9b48-46d9-b62a-cefe350aa64d",
            "12d92604-e06c-498d-a975-fc91d6d80c87",
            "2769531b-7bbb-4bf5-8b61-8ab38b716508",
            "6b0fff82-4b3e-4b8d-9cfc-e9035f5262f9",
            "35528a57-f761-45aa-90f1-b2eaffe7913d",
            "38e37f26-5c88-417a-81cf-e617140d28a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3434,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e27fbbf4-ca86-40e4-b39c-d1c68c2dd18f",
      "title": "",
      "fullFile": "cypress/integration/examples/traversal.spec.js",
      "file": "cypress/integration/examples/traversal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "629b6245-8b6f-48df-a482-9346e027a9e4",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[2]++;\ncov_1cejxm7i0().s[4]++;\n// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "2096e1d3-0d97-4e48-a496-1c0440350688",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 119,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[3]++;\ncov_1cejxm7i0().s[6]++;\n// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "892ad40e-06ff-4b77-b6ac-73c807b0ca92",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[4]++;\ncov_1cejxm7i0().s[8]++;\n// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "afcd3b69-23bc-4918-a6b3-34500ad40a9d",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[5]++;\ncov_1cejxm7i0().s[10]++;\n// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "0c6fd540-bd38-408a-bae2-ac4adcf210b1",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[6]++;\ncov_1cejxm7i0().s[12]++;\n// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "9b04e072-55e6-4ae2-80cb-32be82c9404c",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[7]++;\ncov_1cejxm7i0().s[14]++;\n// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "110629f0-9a1a-41da-a97c-1194b4aaa986",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[8]++;\ncov_1cejxm7i0().s[16]++;\n// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "d1195650-8698-4375-8434-bc97f2b18517",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[9]++;\ncov_1cejxm7i0().s[18]++;\n// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "964288a5-251d-4ffc-8e82-065ee1ca882a",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[10]++;\ncov_1cejxm7i0().s[20]++;\n// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "1e99c079-3702-4a64-91ea-bcf3788bba93",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[11]++;\ncov_1cejxm7i0().s[22]++;\n// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "dae99386-4053-4cca-b006-ad0a678c6fcd",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[12]++;\ncov_1cejxm7i0().s[24]++;\n// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "3ca25ccc-09c9-454d-8628-e44b5e1ebce6",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[13]++;\ncov_1cejxm7i0().s[26]++;\n// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "b087ab74-4d36-4937-8a77-d74fd1ffdb66",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[14]++;\ncov_1cejxm7i0().s[28]++;\n// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "76b539a6-3fd2-4edb-ab4b-e15b78d98559",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 128,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[15]++;\ncov_1cejxm7i0().s[30]++;\n// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "cb15cde9-89e4-473d-ab6e-0246208997b2",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 99,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[16]++;\ncov_1cejxm7i0().s[32]++;\n// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "89233926-da83-4bda-8633-1544c9c46d25",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 112,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[17]++;\ncov_1cejxm7i0().s[34]++;\n// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "f9a55cb8-f1dc-43c0-b530-ae55349b09ab",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[18]++;\ncov_1cejxm7i0().s[36]++;\n// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "7ba9b0d7-b809-4f5a-8135-4d4f32130aa1",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 118,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1cejxm7i0().f[19]++;\ncov_1cejxm7i0().s[38]++;\n// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "e18ca78a-2566-4b11-82ba-6d684c904029",
              "parentUUID": "629b6245-8b6f-48df-a482-9346e027a9e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2096e1d3-0d97-4e48-a496-1c0440350688",
            "892ad40e-06ff-4b77-b6ac-73c807b0ca92",
            "afcd3b69-23bc-4918-a6b3-34500ad40a9d",
            "0c6fd540-bd38-408a-bae2-ac4adcf210b1",
            "9b04e072-55e6-4ae2-80cb-32be82c9404c",
            "110629f0-9a1a-41da-a97c-1194b4aaa986",
            "d1195650-8698-4375-8434-bc97f2b18517",
            "964288a5-251d-4ffc-8e82-065ee1ca882a",
            "1e99c079-3702-4a64-91ea-bcf3788bba93",
            "dae99386-4053-4cca-b006-ad0a678c6fcd",
            "3ca25ccc-09c9-454d-8628-e44b5e1ebce6",
            "b087ab74-4d36-4937-8a77-d74fd1ffdb66",
            "76b539a6-3fd2-4edb-ab4b-e15b78d98559",
            "cb15cde9-89e4-473d-ab6e-0246208997b2",
            "89233926-da83-4bda-8633-1544c9c46d25",
            "f9a55cb8-f1dc-43c0-b530-ae55349b09ab",
            "7ba9b0d7-b809-4f5a-8135-4d4f32130aa1",
            "e18ca78a-2566-4b11-82ba-6d684c904029"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2260,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d03d0dfe-033c-4a12-a5e6-7180a6498876",
      "title": "",
      "fullFile": "cypress/integration/examples/utilities.spec.js",
      "file": "cypress/integration/examples/utilities.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cebdc59f-4ced-4cc0-afd9-5ed026551bb4",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 345,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2all6bd1w().f[2]++;\ncov_2all6bd1w().s[4]++;\n// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  cov_2all6bd1w().f[3]++;\n  var ids = (cov_2all6bd1w().s[5]++, Cypress._.chain(response.body).map('id').take(3).value());\n  cov_2all6bd1w().s[6]++;\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "4525b022-5be8-483c-a5a4-99cda71fc403",
              "parentUUID": "cebdc59f-4ced-4cc0-afd9-5ed026551bb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2all6bd1w().f[4]++;\n// https://on.cypress.io/$\nvar $li = (cov_2all6bd1w().s[8]++, Cypress.$('.utility-jquery li:first'));\ncov_2all6bd1w().s[9]++;\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "a1151224-3db8-4d64-8bc3-5f9c9db0dd79",
              "parentUUID": "cebdc59f-4ced-4cc0-afd9-5ed026551bb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2all6bd1w().f[5]++;\ncov_2all6bd1w().s[11]++;\n// https://on.cypress.io/blob\ncy.get('.utility-blob').then(function ($div) {\n  cov_2all6bd1w().f[6]++;\n  cov_2all6bd1w().s[12]++;\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(function (dataUrl) {\n    cov_2all6bd1w().f[7]++;\n    // create an <img> element and set its src to the dataUrl\n    var img = (cov_2all6bd1w().s[13]++, Cypress.$('<img />', {\n      src: dataUrl\n    })); // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    cov_2all6bd1w().s[14]++;\n    $div.append(img);\n    cov_2all6bd1w().s[15]++;\n    cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "b402e9aa-30ab-4b76-84dd-210388212ccd",
              "parentUUID": "cebdc59f-4ced-4cc0-afd9-5ed026551bb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 256,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2all6bd1w().f[8]++;\n// https://on.cypress.io/minimatch\nvar matching = (cov_2all6bd1w().s[17]++, Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n}));\ncov_2all6bd1w().s[18]++;\nexpect(matching, 'matching wildcard').to.be[\"true\"];\ncov_2all6bd1w().s[19]++;\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\ncov_2all6bd1w().s[20]++;\nexpect(matching, 'comments').to.be[\"false\"]; // ** matches against all downstream path segments\ncov_2all6bd1w().s[21]++;\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\ncov_2all6bd1w().s[22]++;\nexpect(matching, 'comments').to.be[\"true\"]; // whereas * matches only the next path segment\ncov_2all6bd1w().s[23]++;\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\ncov_2all6bd1w().s[24]++;\nexpect(matching, 'comments').to.be[\"false\"];",
              "err": {},
              "uuid": "3633b485-a21c-41f0-9f83-b49349247766",
              "parentUUID": "cebdc59f-4ced-4cc0-afd9-5ed026551bb4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_2all6bd1w().f[9]++;\n// https://on.cypress.io/promise\nvar waited = (cov_2all6bd1w().s[26]++, false);\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  cov_2all6bd1w().f[10]++;\n  cov_2all6bd1w().s[27]++;\n  // return a promise that resolves after 1 second\n  // @ts-ignore TS2351 (new Cypress.Promise)\n  return new Cypress.Promise(function (resolve, reject) {\n    cov_2all6bd1w().f[11]++;\n    cov_2all6bd1w().s[28]++;\n    setTimeout(function () {\n      cov_2all6bd1w().f[12]++;\n      cov_2all6bd1w().s[29]++;\n      // set waited to true\n      waited = true; // resolve with 'foo' string\n      cov_2all6bd1w().s[30]++;\n      resolve('foo');\n    }, 1000);\n  });\n}\ncov_2all6bd1w().s[31]++;\ncy.then(function () {\n  cov_2all6bd1w().f[13]++;\n  cov_2all6bd1w().s[32]++;\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  // @ts-ignore TS7006\n  return waitOneSecond().then(function (str) {\n    cov_2all6bd1w().f[14]++;\n    cov_2all6bd1w().s[33]++;\n    expect(str).to.eq('foo');\n    cov_2all6bd1w().s[34]++;\n    expect(waited).to.be[\"true\"];\n  });\n});",
              "err": {},
              "uuid": "57554ebf-367d-41dd-be44-38099d4396e0",
              "parentUUID": "cebdc59f-4ced-4cc0-afd9-5ed026551bb4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4525b022-5be8-483c-a5a4-99cda71fc403",
            "a1151224-3db8-4d64-8bc3-5f9c9db0dd79",
            "b402e9aa-30ab-4b76-84dd-210388212ccd",
            "3633b485-a21c-41f0-9f83-b49349247766",
            "57554ebf-367d-41dd-be44-38099d4396e0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2185,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "ca6c1dc9-d781-4814-bac8-9f5c6f9b7127",
      "title": "",
      "fullFile": "cypress/integration/examples/viewport.spec.js",
      "file": "cypress/integration/examples/viewport.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "84f1a336-5b6e-4d9e-b54e-7ac3cc07eecc",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 2950,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_rvvm4k7jn().f[2]++;\ncov_rvvm4k7jn().s[4]++;\n// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncov_rvvm4k7jn().s[5]++;\ncy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\ncov_rvvm4k7jn().s[6]++;\ncy.get('#navbar').should('not.be.visible');\ncov_rvvm4k7jn().s[7]++;\ncy.get('.navbar-toggle').should('be.visible').click();\ncov_rvvm4k7jn().s[8]++;\ncy.get('.nav').find('a').should('be.visible'); // lets see what our app looks like on a super large screen\ncov_rvvm4k7jn().s[9]++;\ncy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncov_rvvm4k7jn().s[10]++;\ncy.viewport('macbook-15');\ncov_rvvm4k7jn().s[11]++;\ncy.wait(200);\ncov_rvvm4k7jn().s[12]++;\ncy.viewport('macbook-13');\ncov_rvvm4k7jn().s[13]++;\ncy.wait(200);\ncov_rvvm4k7jn().s[14]++;\ncy.viewport('macbook-11');\ncov_rvvm4k7jn().s[15]++;\ncy.wait(200);\ncov_rvvm4k7jn().s[16]++;\ncy.viewport('ipad-2');\ncov_rvvm4k7jn().s[17]++;\ncy.wait(200);\ncov_rvvm4k7jn().s[18]++;\ncy.viewport('ipad-mini');\ncov_rvvm4k7jn().s[19]++;\ncy.wait(200);\ncov_rvvm4k7jn().s[20]++;\ncy.viewport('iphone-6+');\ncov_rvvm4k7jn().s[21]++;\ncy.wait(200);\ncov_rvvm4k7jn().s[22]++;\ncy.viewport('iphone-6');\ncov_rvvm4k7jn().s[23]++;\ncy.wait(200);\ncov_rvvm4k7jn().s[24]++;\ncy.viewport('iphone-5');\ncov_rvvm4k7jn().s[25]++;\ncy.wait(200);\ncov_rvvm4k7jn().s[26]++;\ncy.viewport('iphone-4');\ncov_rvvm4k7jn().s[27]++;\ncy.wait(200);\ncov_rvvm4k7jn().s[28]++;\ncy.viewport('iphone-3');\ncov_rvvm4k7jn().s[29]++;\ncy.wait(200); // cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncov_rvvm4k7jn().s[30]++;\ncy.viewport('ipad-2', 'portrait');\ncov_rvvm4k7jn().s[31]++;\ncy.wait(200);\ncov_rvvm4k7jn().s[32]++;\ncy.viewport('iphone-4', 'landscape');\ncov_rvvm4k7jn().s[33]++;\ncy.wait(200); // The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "26f73090-ace3-4fcd-949c-ca70355e3690",
              "parentUUID": "84f1a336-5b6e-4d9e-b54e-7ac3cc07eecc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "26f73090-ace3-4fcd-949c-ca70355e3690"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2950,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "f437319a-a4d6-45a3-92a5-df460ec01738",
      "title": "",
      "fullFile": "cypress/integration/examples/waiting.spec.js",
      "file": "cypress/integration/examples/waiting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c46f199d-385e-49ad-aecc-8a9a6b14b133",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 4630,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1df1o8prxz().f[2]++;\ncov_1df1o8prxz().s[4]++;\ncy.get('.wait-input1').type('Wait 1000ms after typing');\ncov_1df1o8prxz().s[5]++;\ncy.wait(1000);\ncov_1df1o8prxz().s[6]++;\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncov_1df1o8prxz().s[7]++;\ncy.wait(1000);\ncov_1df1o8prxz().s[8]++;\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncov_1df1o8prxz().s[9]++;\ncy.wait(1000);",
              "err": {},
              "uuid": "2f899af2-098c-4db8-bff1-9ac211d5735a",
              "parentUUID": "c46f199d-385e-49ad-aecc-8a9a6b14b133",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 341,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1df1o8prxz().f[3]++;\ncov_1df1o8prxz().s[11]++;\n// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncov_1df1o8prxz().s[12]++;\ncy.get('.network-btn').click(); // wait for GET comments/1\ncov_1df1o8prxz().s[13]++;\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "74a4b61a-8ce1-4b3f-949b-dbdc129b1a07",
              "parentUUID": "c46f199d-385e-49ad-aecc-8a9a6b14b133",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2f899af2-098c-4db8-bff1-9ac211d5735a",
            "74a4b61a-8ce1-4b3f-949b-dbdc129b1a07"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4971,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "1e5e17ce-6489-41c1-9cae-fd1156e541ed",
      "title": "",
      "fullFile": "cypress/integration/examples/window.spec.js",
      "file": "cypress/integration/examples/window.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0f704e53-af06-496b-990c-86fa077ffed0",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 239,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1l9soqq8hc().f[2]++;\ncov_1l9soqq8hc().s[4]++;\n// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "4419436d-ebd2-4de4-9c77-75db4170bc5c",
              "parentUUID": "0f704e53-af06-496b-990c-86fa077ffed0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1l9soqq8hc().f[3]++;\ncov_1l9soqq8hc().s[6]++;\n// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "eb838bb0-2f81-429b-add6-3cf496201b89",
              "parentUUID": "0f704e53-af06-496b-990c-86fa077ffed0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cov_1l9soqq8hc().f[4]++;\ncov_1l9soqq8hc().s[8]++;\n// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "21a411c9-b9c5-4673-ad1d-f92dd39a60d8",
              "parentUUID": "0f704e53-af06-496b-990c-86fa077ffed0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4419436d-ebd2-4de4-9c77-75db4170bc5c",
            "eb838bb0-2f81-429b-add6-3cf496201b89",
            "21a411c9-b9c5-4673-ad1d-f92dd39a60d8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 422,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}